{"version":3,"sources":["redux/error/errorReducer.js","redux/auth/authReducer.js","redux/post/postReducer.js","redux/postList/postListReducer.js","redux/createPost/createPostReducer.js","redux/reducers.js","redux/actionTypes.js","redux/store.js","redux/error/errorActions.js","redux/auth/authActions.js","components/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/auth/Settings.js","redux/post/postActions.js","components/post/PostComponent.js","components/post/PostRender.js","components/post/Post.js","components/PostPreview.js","redux/postList/postListActions.js","components/PostList.js","components/ListViews/Home.js","redux/createPost/createPostActions.js","components/CreatePost.js","components/EditPost.js","components/ListViews/UserPage.js","components/ListViews/AllPosts.js","components/ListViews/FollowingPosts.js","components/ListViews/SearchPosts.js","App.js","serviceWorker.js","index.js"],"names":["initialState","msg","status","id","token","localStorage","getItem","isAuthenticated","isLoading","user","loadingSubmit","followingList","title","content","author","createdAt","foundPost","deletedPost","list","noFollowing","userNotFound","last","error","creatingPost","combineReducers","state","action","type","payload","auth","setItem","removeItem","window","location","reload","newFollowing","post","postList","createPost","newPostId","oldTitle","middleWare","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","returnErrors","clearErrors","loadFollowingList","dispatch","getState","axios","get","tokenConfig","then","res","data","following","catch","err","response","unfollow","target","body","JSON","stringify","patch","config","headers","Navbar","props","searchTarget","onChange","bind","submitSearch","e","name","value","this","setState","preventDefault","trim","className","to","autoComplete","placeholder","onClick","username","logout","React","Component","connect","Signup","password","onSubmit","prevProps","newUser","signup","autoFocus","disabled","Login","login","Settings","deleteWarning","showFollowing","deleteUser","openFollowing","prevState","length","slice","reverse","map","key","delete","getPost","toString","noPostId","s","text","createElement","level","classModifications","styleModifications","withBorder","stretched","maxWidth","margin","display","src","url","style","alt","caption","items","idx","element","dangerouslySetInnerHTML","__html","blocks","block","PostComponent","Post","deletePost","qs","parse","search","ignoreQueryPrefix","substring","PostRender","PostPreview","postDestination","userDestination","date","userPosts","before","after","posts","PostList","page","updateList","query","listType","allPosts","followingPosts","searchPosts","_id","parseInt","Home","postTooShort","postNoTitle","CreatePost","editorIsReady","handlePost","editor","EditorJS","holder","autofocus","tools","header","Header","simpleImage","SimpleImage","delimiter","Delimiter","List","underline","Underline","inlineCode","InlineCode","onReady","time","version","save","output","postSuccess","console","log","newPost","EditPost","diffTitle","editPost","newContent","UserPage","isFollowing","toggleFollow","f","forEach","followingItem","match","params","follow","self","AllPosts","FollowingPosts","SearchPosts","App","store","path","component","exact","Boolean","hostname","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4aa06461.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id,\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    DELETE_USER,\r\n    LOADING_SUBMIT,\r\n    LOAD_FOLLOWING,\r\n    FOLLOW,\r\n    UNFOLLOW,\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    isLoading: null,\r\n    user: null,\r\n    loadingSubmit: false,\r\n    followingList: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload,\r\n            }\r\n        case LOADING_SUBMIT:\r\n            return {\r\n                ...state,\r\n                loadingSubmit: true,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case SIGNUP_SUCCESS:\r\n            localStorage.setItem(\"token\", action.payload.token)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                loadingSubmit: false,\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n        case DELETE_USER:\r\n            localStorage.removeItem(\"token\")\r\n            window.location.reload(true)\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n            }\r\n        case LOAD_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingList: action.payload.followingList,\r\n            }\r\n        case FOLLOW:\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                followingList: action.payload.newFollowing,\r\n            }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n            localStorage.removeItem(\"token\")\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                loadingSubmit: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    GET_POST,\r\n    GET_POST_ERROR,\r\n    POST_LOADING,\r\n    DELETE_POST,\r\n    NO_POST_ID,\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    title: null,\r\n    content: null,\r\n    author: null,\r\n    createdAt: null,\r\n    isLoading: null,\r\n    foundPost: null,\r\n    deletedPost: false,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_POST:\r\n            return {\r\n                ...action.payload,\r\n                foundPost: true,\r\n                isLoading: false,\r\n            }\r\n        case GET_POST_ERROR:\r\n        case NO_POST_ID:\r\n            return {\r\n                ...state,\r\n                foundPost: false,\r\n                isLoading: false,\r\n            }\r\n        case POST_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...initialState,\r\n                deletedPost: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    ALL_POSTS,\r\n    FOLLOWING_POSTS,\r\n    LOADING_POSTS,\r\n    USER_POSTS,\r\n    USER_NOT_FOUND,\r\n    SEARCH_POSTS,\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    isLoading: null,\r\n    list: [],\r\n    noFollowing: null,\r\n    userNotFound: null,\r\n    last: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOADING_POSTS:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                last: true,\r\n            }\r\n        case ALL_POSTS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isLoading: false,\r\n                noFollowing: null,\r\n            }\r\n        case USER_POSTS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isLoading: false,\r\n                noFollowing: null,\r\n                userNotFound: false,\r\n            }\r\n        case USER_NOT_FOUND:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                userNotFound: true,\r\n            }\r\n        case FOLLOWING_POSTS:\r\n        case SEARCH_POSTS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    POST_SUCCESS,\r\n    POST_TOO_SHORT,\r\n    POST_NO_TITLE,\r\n    CREATE_POST_ERROR,\r\n    CREATING_POST,\r\n    EDIT_POST,\r\n    DIFF_TITLE,\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    error: null,\r\n    creatingPost: false,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATING_POST:\r\n            return {\r\n                ...state,\r\n                creatingPost: true,\r\n                error: null,\r\n            }\r\n        case POST_SUCCESS:\r\n        case EDIT_POST:\r\n            window.location = \"/blap/#/post?id=\" + action.payload.newPostId\r\n            return {\r\n                ...state,\r\n                creatingPost: false,\r\n            }\r\n        case POST_TOO_SHORT:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    msg: \"Your post must have at least 2 blocks\",\r\n                },\r\n                creatingPost: false,\r\n            }\r\n        case POST_NO_TITLE:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    msg: \"The first block of your post must be the title (H1)\",\r\n                },\r\n                creatingPost: false,\r\n            }\r\n        case CREATE_POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    msg: \"An unknown error occured\",\r\n                },\r\n                creatingPost: false,\r\n            }\r\n        case DIFF_TITLE:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    msg:\r\n                        'You cannot edit the title of \"' +\r\n                        action.payload.oldTitle +\r\n                        '\"',\r\n                },\r\n                creatingPost: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\"\r\n\r\nimport errorReducer from \"./error/errorReducer\"\r\nimport authReducer from \"./auth/authReducer\"\r\nimport postReducer from \"./post/postReducer\"\r\nimport postListReducer from \"./postList/postListReducer\"\r\nimport createPostReducer from \"./createPost/createPostReducer\"\r\n\r\nexport default combineReducers({\r\n    error: errorReducer,\r\n    auth: authReducer,\r\n    post: postReducer,\r\n    postList: postListReducer,\r\n    createPost: createPostReducer,\r\n})\r\n","// auth\r\nexport const USER_LOADING = \"USER_LOADING\"\r\nexport const USER_LOADED = \"USER_LOADED\"\r\nexport const AUTH_ERROR = \"AUTH_ERROR\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\"\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\"\r\nexport const DELETE_USER = \"DELETE_USER\"\r\nexport const LOADING_SUBMIT = \"LOADING_SUBMIT\"\r\nexport const LOAD_FOLLOWING = \"LOAD_FOLLOWING\"\r\nexport const FOLLOW = \"FOLLOW\"\r\nexport const UNFOLLOW = \"UNFOLLOW\"\r\n\r\n// error\r\nexport const GET_ERRORS = \"GET_ERRORS\"\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\"\r\n\r\n// post\r\nexport const GET_POST = \"GET_POST\"\r\nexport const GET_POST_ERROR = \"GET_POST_ERROR\"\r\nexport const POST_LOADING = \"POST_LOADING\"\r\nexport const DELETE_POST = \"DELETE_POST\"\r\nexport const NO_POST_ID = \"NO_POST_ID\"\r\n\r\n// postList\r\nexport const ALL_POSTS = \"ALL_POSTS\"\r\nexport const FOLLOWING_POSTS = \"FOLLOWING_POSTS\"\r\nexport const USER_POSTS = \"USER_POSTS\"\r\nexport const SEARCH_POSTS = \"SEARCH_POSTS\"\r\nexport const USER_NOT_FOUND = \"USER_NOT_FOUND\"\r\nexport const LOADING_POSTS = \"LOADING_POSTS\"\r\n\r\n// createPost\r\nexport const POST_SUCCESS = \"POST_SUCCESS\"\r\nexport const POST_TOO_SHORT = \"POST_TOO_SHORT\"\r\nexport const POST_NO_TITLE = \"POST_NO_TITLE\"\r\nexport const CREATE_POST_ERROR = \"CREATE_POST_ERROR\"\r\nexport const CREATING_POST = \"CREATING_POST\"\r\nexport const EDIT_POST = \"EDIT_POST\"\r\nexport const DIFF_TITLE = \"DIFF_TITLE\"\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport reducers from \"./reducers\"\r\n\r\nconst initialState = {}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport default createStore(\r\n    reducers,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middleWare))\r\n)\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actionTypes\"\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id },\r\n    }\r\n}\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS,\r\n    }\r\n}\r\n","import axios from \"axios\"\r\n\r\nimport { returnErrors } from \"../error/errorActions\"\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    DELETE_USER,\r\n    LOADING_SUBMIT,\r\n    LOAD_FOLLOWING,\r\n    FOLLOW,\r\n    UNFOLLOW,\r\n} from \"../actionTypes\"\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING })\r\n\r\n    axios\r\n        .get(\"/auth/user\", tokenConfig(getState))\r\n        .then(res =>\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: res.data,\r\n            })\r\n        )\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(returnErrors(err.response.data, err.response.status))\r\n            }\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Sign up user\r\nexport const signup = ({ username, password }) => dispatch => {\r\n    dispatch({\r\n        type: LOADING_SUBMIT,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // Request body\r\n    const body = JSON.stringify({ username, password })\r\n\r\n    axios\r\n        .post(\"/users/signup\", body, config)\r\n        .then(res =>\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                payload: res.data,\r\n            })\r\n        )\r\n        .catch(err => {\r\n            dispatch(\r\n                returnErrors(\r\n                    err.response.data,\r\n                    err.response.status,\r\n                    \"SIGNUP_FAIL\"\r\n                )\r\n            )\r\n            dispatch({\r\n                type: SIGNUP_FAIL,\r\n            })\r\n        })\r\n}\r\n\r\n// Log in user\r\nexport const login = ({ username, password }) => dispatch => {\r\n    dispatch({\r\n        type: LOADING_SUBMIT,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // Request body\r\n    const body = JSON.stringify({ username, password })\r\n\r\n    axios\r\n        .post(\"/auth/login\", body, config)\r\n        .then(res =>\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data,\r\n            })\r\n        )\r\n        .catch(err => {\r\n            dispatch(\r\n                returnErrors(\r\n                    err.response.data,\r\n                    err.response.status,\r\n                    \"LOGIN_FAIL\"\r\n                )\r\n            )\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n            })\r\n        })\r\n}\r\n\r\n// Log out user\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS,\r\n    }\r\n}\r\n\r\n// Delete the user\r\nexport const deleteUser = () => (dispatch, getState) => {\r\n    axios\r\n        .delete(\"/auth/delete\", tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_USER,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Load the user's following list\r\nexport const loadFollowingList = () => (dispatch, getState) => {\r\n    axios\r\n        .get(\"/auth/following\", tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: LOAD_FOLLOWING,\r\n                payload: {\r\n                    followingList: res.data.following,\r\n                },\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Follow a user\r\nexport const follow = target => (dispatch, getState) => {\r\n    const body = JSON.stringify({ user: target })\r\n\r\n    axios\r\n        .patch(\"/auth/follow\", body, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: FOLLOW,\r\n                payload: {\r\n                    newFollowing: res.data.following,\r\n                },\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Unfollow a user\r\nexport const unfollow = target => (dispatch, getState) => {\r\n    const body = JSON.stringify({ user: target })\r\n\r\n    axios\r\n        .patch(\"/auth/unfollow\", body, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: UNFOLLOW,\r\n                payload: {\r\n                    newFollowing: res.data.following,\r\n                },\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localStorage\r\n    const token = getState().auth.token\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token\r\n    }\r\n\r\n    return config\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"../styles/navbar.css\"\r\nimport { logout } from \"../redux/auth/authActions\"\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            searchTarget: \"\",\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.submitSearch = this.submitSearch.bind(this)\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    submitSearch(e) {\r\n        e.preventDefault()\r\n        if (this.state.searchTarget.trim() === \"\") {\r\n            return\r\n        }\r\n\r\n        window.location =\r\n            \"/blap/#/search?target=\" + this.state.searchTarget.trim()\r\n        window.location.reload(true)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg sticky-top\">\r\n                <Link to=\"/\" className=\"navbar-brand\">\r\n                    blap\r\n                </Link>\r\n                <div className=\"collapse navbar-collapse\">\r\n                    <ul className=\"left-nav navbar-nav\">\r\n                        <li className=\"all-link navbar-item\">\r\n                            <Link\r\n                                to={this.props.isAuthenticated ? \"/all\" : \"/\"}\r\n                                className=\"nav-link\"\r\n                            >\r\n                                All\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"following-link navbar-item\">\r\n                            <Link\r\n                                to={\r\n                                    this.props.isAuthenticated\r\n                                        ? \"/following\"\r\n                                        : \"/login\"\r\n                                }\r\n                                className=\"nav-link\"\r\n                            >\r\n                                Following\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"create-link navbar-item\">\r\n                            <Link\r\n                                to={\r\n                                    this.props.isAuthenticated\r\n                                        ? \"/create\"\r\n                                        : \"/login\"\r\n                                }\r\n                                className=\"nav-link\"\r\n                            >\r\n                                Create Post\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    {!this.props.isLoading ? (\r\n                        <ul className=\"right-nav navbar-nav ml-md-auto\">\r\n                            <div className=\"search-bar\">\r\n                                <form\r\n                                    className=\"form-inline my-2 my-lg-0\"\r\n                                    autoComplete=\"off\"\r\n                                >\r\n                                    <input\r\n                                        className=\"form-control mr-sm-2\"\r\n                                        placeholder=\"Search\"\r\n                                        value={this.state.searchTarget}\r\n                                        onChange={this.onChange}\r\n                                        name=\"searchTarget\"\r\n                                    />\r\n                                    <button\r\n                                        className=\"btn btn-outline-success my-2 my-sm-0 mr-3\"\r\n                                        onClick={this.submitSearch}\r\n                                    >\r\n                                        Search\r\n                                    </button>\r\n                                </form>\r\n                            </div>\r\n\r\n                            {!this.props.isAuthenticated ? (\r\n                                <div className=\"logged-in\">\r\n                                    <li className=\"navbar-item\">\r\n                                        <Link to=\"/signup\" className=\"nav-link\">\r\n                                            Sign up\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"navbar-item\">\r\n                                        <Link to=\"/login\" className=\"nav-link\">\r\n                                            Log in\r\n                                        </Link>\r\n                                    </li>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"logged-out\">\r\n                                    <li className=\"navbar-item\">\r\n                                        <Link\r\n                                            to={\r\n                                                \"/user/\" +\r\n                                                this.props.user.username\r\n                                            }\r\n                                            className=\"nav-link\"\r\n                                        >\r\n                                            {this.props.user.username}\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"navbar-item\">\r\n                                        <Link\r\n                                            to=\"/settings\"\r\n                                            className=\"nav-link\"\r\n                                        >\r\n                                            Settings\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"navbar-item\">\r\n                                        <Link\r\n                                            to=\"/\"\r\n                                            className=\"nav-link\"\r\n                                            onClick={this.props.logout}\r\n                                        >\r\n                                            Log out\r\n                                        </Link>\r\n                                    </li>\r\n                                </div>\r\n                            )}\r\n                        </ul>\r\n                    ) : null}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isLoading: state.auth.isLoading,\r\n    user: state.auth.user,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"../../styles/signup.css\"\r\nimport { signup } from \"../../redux/auth/authActions\"\r\nimport { clearErrors } from \"../../redux/error/errorActions\"\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            msg: null,\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { error, isAuthenticated } = this.props\r\n        if (error !== prevProps.error) {\r\n            // Check for a signup error\r\n            if (error.id === \"SIGNUP_FAIL\") {\r\n                this.setState({ msg: error.msg.msg })\r\n            } else {\r\n                this.setState({ msg: null })\r\n            }\r\n        }\r\n\r\n        if (isAuthenticated) {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        const { username, password } = this.state\r\n        const newUser = {\r\n            username,\r\n            password,\r\n        }\r\n\r\n        this.props.signup(newUser)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h1>Sign up</h1>\r\n                <form onSubmit={this.onSubmit} className=\"form-signin\">\r\n                    <input\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Username\"\r\n                        autoFocus\r\n                        className=\"form-control\"\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Password\"\r\n                        className=\"form-control\"\r\n                    />\r\n\r\n                    {this.state.msg ? (\r\n                        <div className=\"alert alert-danger\">\r\n                            {this.state.msg}\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <button\r\n                        className=\"btn btn-lg btn-primary btn-block\"\r\n                        disabled={this.props.loadingSubmit}\r\n                    >\r\n                        {this.props.loadingSubmit ? (\r\n                            <span className=\"spinner-border spinner-border-sm\" />\r\n                        ) : (\r\n                            \"Submit\"\r\n                        )}\r\n                    </button>\r\n                </form>\r\n\r\n                <p>\r\n                    Already have an account? <Link to=\"/login\">Log in</Link>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error,\r\n    loadingSubmit: state.auth.loadingSubmit,\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup, clearErrors })(Signup)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"../../styles/signup.css\"\r\nimport { login } from \"../../redux/auth/authActions\"\r\nimport { clearErrors } from \"../../redux/error/errorActions\"\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            msg: null,\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { error, isAuthenticated } = this.props\r\n        if (error !== prevProps.error) {\r\n            // Check for a signup error\r\n            if (error.id === \"LOGIN_FAIL\") {\r\n                this.setState({ msg: error.msg.msg })\r\n            } else {\r\n                this.setState({ msg: null })\r\n            }\r\n        }\r\n\r\n        if (isAuthenticated) {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        const { username, password } = this.state\r\n        const user = {\r\n            username,\r\n            password,\r\n        }\r\n\r\n        // Attempt to log in\r\n        this.props.login(user)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h1>Log in</h1>\r\n                <form onSubmit={this.onSubmit} className=\"form-signin\">\r\n                    <input\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Username\"\r\n                        autoFocus\r\n                        className=\"form-control\"\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Password\"\r\n                        className=\"form-control\"\r\n                    />\r\n\r\n                    {this.state.msg ? (\r\n                        <div className=\"alert alert-danger\">\r\n                            {this.state.msg}\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <button\r\n                        className=\"btn btn-lg btn-primary btn-block\"\r\n                        disabled={this.props.loadingSubmit}\r\n                    >\r\n                        {this.props.loadingSubmit ? (\r\n                            <span className=\"spinner-border spinner-border-sm\" />\r\n                        ) : (\r\n                            \"Submit\"\r\n                        )}\r\n                    </button>\r\n                </form>\r\n\r\n                <p>\r\n                    Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error,\r\n    loadingSubmit: state.auth.loadingSubmit,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(Login)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n    deleteUser,\r\n    loadFollowingList,\r\n    unfollow,\r\n} from \"../../redux/auth/authActions\"\r\nimport \"../../styles/settings.css\"\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            deleteWarning: false,\r\n            showFollowing: false,\r\n        }\r\n        this.deleteWarning = this.deleteWarning.bind(this)\r\n        this.deleteUser = this.deleteUser.bind(this)\r\n        this.openFollowing = this.openFollowing.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadFollowingList()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n    }\r\n\r\n    deleteWarning() {\r\n        this.setState({\r\n            deleteWarning: true,\r\n        })\r\n    }\r\n\r\n    deleteUser() {\r\n        this.props.deleteUser()\r\n    }\r\n\r\n    openFollowing() {\r\n        this.setState(prevState => ({\r\n            showFollowing: !prevState.showFollowing,\r\n        }))\r\n    }\r\n\r\n    unfollow(target) {\r\n        this.props.unfollow(target)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Settings</h1>\r\n                <br />\r\n\r\n                <div className=\"row following-header\">\r\n                    <h3 className=\"col\">Following</h3>\r\n                    <button\r\n                        className=\"col following-btn btn btn-sm btn-secondary btn-block\"\r\n                        onClick={this.openFollowing}\r\n                    >\r\n                        {this.state.showFollowing ? \"Hide\" : \"Show\"}\r\n                    </button>\r\n                </div>\r\n\r\n                {this.state.showFollowing ? (\r\n                    <ul className=\"list-group\">\r\n                        {this.props.followingList.length > 0 ? (\r\n                            this.props.followingList\r\n                                .slice()\r\n                                .reverse()\r\n                                .map(username => (\r\n                                    <li\r\n                                        className=\"list-group-item\"\r\n                                        key={username}\r\n                                    >\r\n                                        <button\r\n                                            className=\"btn btn-sm btn-danger\"\r\n                                            onClick={() =>\r\n                                                this.unfollow(username)\r\n                                            }\r\n                                        >\r\n                                            X\r\n                                        </button>\r\n                                        <Link\r\n                                            to={\"/user/\" + username}\r\n                                            className=\"following-username text-dark\"\r\n                                        >\r\n                                            {username}\r\n                                        </Link>\r\n                                    </li>\r\n                                ))\r\n                        ) : (\r\n                            <li className=\"list-group-item\">\r\n                                You are not following any users\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                ) : (\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">. . .</li>\r\n                    </ul>\r\n                )}\r\n\r\n                <br />\r\n\r\n                <h3>Delete Account</h3>\r\n                {!this.state.deleteWarning ? (\r\n                    <button\r\n                        className=\"delete-acc-btn btn btn-danger btn-block\"\r\n                        onClick={this.deleteWarning}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                ) : (\r\n                    <div>\r\n                        <p>\r\n                            Are you sure? Your account will be deleted\r\n                            permanently.\r\n                        </p>\r\n                        <button\r\n                            className=\"delete-acc-btn btn btn-danger btn-block\"\r\n                            onClick={this.deleteUser}\r\n                        >\r\n                            Yes, I'm sure\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    followingList: state.auth.followingList,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    deleteUser,\r\n    loadFollowingList,\r\n    unfollow,\r\n})(Settings)\r\n","import axios from \"axios\"\r\n\r\nimport {\r\n    GET_POST,\r\n    GET_POST_ERROR,\r\n    POST_LOADING,\r\n    DELETE_POST,\r\n    AUTH_ERROR,\r\n    NO_POST_ID,\r\n} from \"../actionTypes\"\r\nimport { returnErrors } from \"../error/errorActions\"\r\n\r\nexport const getPost = id => dispatch => {\r\n    dispatch({ type: POST_LOADING })\r\n\r\n    axios\r\n        .get(\"/posts/id/\" + id.toString())\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: GET_POST_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\nexport const deletePost = id => (dispatch, getState) => {\r\n    if (!id) {\r\n        window.location = \"/blap/#/\"\r\n        return\r\n    }\r\n\r\n    axios\r\n        .delete(\"/posts/id/\" + id.toString(), tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_POST,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\nexport const noPostId = () => {\r\n    return {\r\n        type: NO_POST_ID,\r\n    }\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localStorage\r\n    const token = getState().auth.token\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token\r\n    }\r\n\r\n    return config\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function (props) {\r\n    let s = \"\"\r\n    switch (props.type) {\r\n        case \"paragraph\":\r\n            s = \"<p>\" + props.data.text + \"</p>\"\r\n            return createElement(s)\r\n\r\n        case \"header\":\r\n            s = \"<h\" + props.data.level + \">\"\r\n            s += props.data.text\r\n            s += \"</h\" + props.data.level + \">\"\r\n            return createElement(s)\r\n\r\n        case \"simpleImage\":\r\n            let classModifications = \"\"\r\n            let styleModifications = {}\r\n            if (props.data.withBorder) {\r\n                classModifications += \"border \"\r\n            }\r\n            if (props.data.stretched) {\r\n                classModifications += \"w-100 \"\r\n            } else {\r\n                styleModifications = {\r\n                    maxWidth: \"650px\",\r\n                    margin: \"auto\",\r\n                    display: \"block\",\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <img\r\n                        src={props.data.url}\r\n                        className={classModifications}\r\n                        style={styleModifications}\r\n                        alt={props.data.caption}\r\n                    />\r\n                    <p className=\"text-center text-muted\">\r\n                        {props.data.caption}\r\n                    </p>\r\n                </div>\r\n            )\r\n\r\n        case \"delimiter\":\r\n            return <h3 className=\"text-center\">* * *</h3>\r\n\r\n        case \"list\":\r\n            if (props.data.style === \"ordered\") {\r\n                return (\r\n                    <ol>\r\n                        {props.data.items.map((text, idx) => (\r\n                            <li key={idx}>\r\n                                <p>{text}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                )\r\n            } else {\r\n                return (\r\n                    <ul>\r\n                        {props.data.items.map((text, idx) => (\r\n                            <li key={idx}>\r\n                                <p>{text}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )\r\n            }\r\n\r\n        default:\r\n            return <div />\r\n    }\r\n}\r\n\r\nconst createElement = element => (\r\n    <div dangerouslySetInnerHTML={{ __html: element }} />\r\n)\r\n","import React from \"react\"\r\nimport PostComponent from \"./PostComponent\"\r\n\r\nexport default function (props) {\r\n    return (\r\n        <div>\r\n            {props.blocks.map((block, idx) => {\r\n                return (\r\n                    <PostComponent\r\n                        key={idx}\r\n                        type={block.type}\r\n                        data={block.data}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport qs from \"qs\"\r\n\r\nimport \"../../styles/post.css\"\r\nimport { getPost, deletePost, noPostId } from \"../../redux/post/postActions\"\r\nimport PostRender from \"./PostRender\"\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.deletePost = this.deletePost.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.id = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        }).id\r\n\r\n        if (this.id) {\r\n            this.props.getPost(this.id)\r\n        } else {\r\n            this.props.noPostId()\r\n        }\r\n    }\r\n\r\n    deletePost() {\r\n        this.props.deletePost(this.id)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.deletedPost) {\r\n            return (\r\n                <div className=\"blog-post\">\r\n                    <p className=\"text-center\">Post deleted</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.foundPost) {\r\n            return (\r\n                <div className=\"blog-post\">\r\n                    <div className=\"text-muted\">\r\n                        <Link\r\n                            to={\"/user/\" + this.props.author}\r\n                            className=\"text-muted author\"\r\n                        >\r\n                            {this.props.author}\r\n                        </Link>{\" \"}\r\n                        <p style={{ display: \"inline\" }} className=\"small\">\r\n                            {this.props.createdAt.substring(0, 10)}\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* {JSON.stringify(this.props.content.blocks)} */}\r\n                    <PostRender blocks={this.props.content.blocks} />\r\n\r\n                    <br />\r\n                    {this.props.user &&\r\n                    this.props.user.username === this.props.author ? (\r\n                        <div className=\"row post-btns\">\r\n                            <Link\r\n                                to={\"/edit?id=\" + this.id}\r\n                                className=\"edit-btn btn btn-sm btn-primary btn-block\"\r\n                            >\r\n                                Edit\r\n                            </Link>\r\n                            <button\r\n                                onClick={this.deletePost}\r\n                                className=\"delete-btn btn btn-sm btn-danger btn-block\"\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"blog-post\">\r\n                <p className=\"text-center\">Couldn't find post</p>\r\n                <button\r\n                    className=\"retry-btn btn btn-sm btn-secondary btn-block\"\r\n                    onClick={() => window.location.reload(true)}\r\n                >\r\n                    Retry\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    title: state.post.title,\r\n    content: state.post.content,\r\n    author: state.post.username,\r\n    createdAt: state.post.createdAt,\r\n\r\n    isLoading: state.post.isLoading,\r\n    deletedPost: state.post.deletedPost,\r\n    foundPost: state.post.foundPost,\r\n\r\n    user: state.auth.user,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost, deletePost, noPostId })(Post)\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../styles/postPreview.css\"\r\n\r\nexport default function PostPreview(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"card border-dark\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title\">\r\n                        <Link\r\n                            to={props.data.postDestination}\r\n                            className=\"text-dark stretched-link\"\r\n                        >\r\n                            {props.data.title}\r\n                        </Link>\r\n                    </h2>\r\n                    <div className=\"card-subtitle text-muted\">\r\n                        <Link\r\n                            to={props.data.userDestination}\r\n                            className=\"text-muted author\"\r\n                        >\r\n                            {props.data.author}\r\n                        </Link>{\" \"}\r\n                        <p style={{ display: \"inline\" }} className=\"small date\">\r\n                            {props.data.date}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\"\r\n\r\nimport {\r\n    ALL_POSTS,\r\n    FOLLOWING_POSTS,\r\n    LOADING_POSTS,\r\n    AUTH_ERROR,\r\n    USER_POSTS,\r\n    USER_NOT_FOUND,\r\n    SEARCH_POSTS,\r\n} from \"../actionTypes\"\r\nimport { returnErrors } from \"../error/errorActions\"\r\n\r\n// Get all posts\r\nexport const allPosts = (before, after) => dispatch => {\r\n    dispatch({ type: LOADING_POSTS })\r\n\r\n    // Body\r\n    const body = JSON.stringify({\r\n        before,\r\n        after,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    axios\r\n        .post(\"/posts/all\", body, config)\r\n        .then(res => {\r\n            const list = [...res.data.posts]\r\n            dispatch({\r\n                type: ALL_POSTS,\r\n                payload: {\r\n                    list,\r\n                    last: res.data.last,\r\n                },\r\n            })\r\n        })\r\n        .catch()\r\n}\r\n\r\n// Get posts from followed users\r\nexport const followingPosts = (before, after) => (dispatch, getState) => {\r\n    dispatch({ type: LOADING_POSTS })\r\n\r\n    // Body\r\n    const body = JSON.stringify({\r\n        before,\r\n        after,\r\n    })\r\n\r\n    axios\r\n        .post(\"/posts/following\", body, tokenConfig(getState))\r\n        .then(res => {\r\n            const list = [...res.data.posts]\r\n            dispatch({\r\n                type: FOLLOWING_POSTS,\r\n                payload: {\r\n                    list,\r\n                    noFollowing: res.data.noFollowing,\r\n                    last: res.data.last,\r\n                },\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Get all of a user's posts\r\nexport const userPosts = (username, before, after) => dispatch => {\r\n    dispatch({ type: LOADING_POSTS })\r\n\r\n    // Body\r\n    const body = JSON.stringify({\r\n        before,\r\n        after,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    axios\r\n        .post(\"/users/\" + username + \"/posts\", body, config)\r\n        .then(res => {\r\n            const list = [...res.data.posts]\r\n            dispatch({\r\n                type: USER_POSTS,\r\n                payload: {\r\n                    list,\r\n                    last: res.data.last,\r\n                },\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({ type: USER_NOT_FOUND })\r\n        })\r\n}\r\n\r\n// Get a list of posts based on a search\r\nexport const searchPosts = (target, before, after) => dispatch => {\r\n    dispatch({ type: LOADING_POSTS })\r\n\r\n    // Body\r\n    const body = JSON.stringify({\r\n        target,\r\n        before,\r\n        after,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    axios\r\n        .post(\"/posts/search\", body, config)\r\n        .then(res => {\r\n            const list = [...res.data.posts]\r\n            dispatch({\r\n                type: SEARCH_POSTS,\r\n                payload: {\r\n                    list,\r\n                    last: res.data.last,\r\n                },\r\n            })\r\n        })\r\n        .catch()\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localStorage\r\n    const token = getState().auth.token\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token\r\n    }\r\n\r\n    return config\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport qs from \"qs\"\r\n\r\nimport PostPreview from \"./PostPreview\"\r\nimport {\r\n    allPosts,\r\n    followingPosts,\r\n    userPosts,\r\n    searchPosts,\r\n} from \"../redux/postList/postListActions\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nclass PostList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: null,\r\n            before: null,\r\n            after: null,\r\n        }\r\n        this.updateList = this.updateList.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const query = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        })\r\n        this.updateList(query)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const query = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        })\r\n        if (\r\n            query.page !== this.state.page ||\r\n            query.before !== this.state.before ||\r\n            query.after !== this.state.after\r\n        ) {\r\n            this.updateList(query)\r\n        }\r\n    }\r\n\r\n    updateList(query) {\r\n        this.setState(\r\n            {\r\n                page: query.page,\r\n                before: query.before,\r\n                after: query.after,\r\n            },\r\n            () => {\r\n                switch (this.props.listType) {\r\n                    case \"all\":\r\n                        this.props.allPosts(this.state.before, this.state.after)\r\n                        break\r\n                    case \"following\":\r\n                        this.props.followingPosts(\r\n                            this.state.before,\r\n                            this.state.after\r\n                        )\r\n                        break\r\n                    case \"user\":\r\n                        this.props.userPosts(\r\n                            this.props.username,\r\n                            this.state.before,\r\n                            this.state.after\r\n                        )\r\n                        break\r\n                    case \"search\":\r\n                        this.props.searchPosts(\r\n                            this.props.target,\r\n                            this.state.before,\r\n                            this.state.after\r\n                        )\r\n                        break\r\n                    default:\r\n                        this.props.allPosts(this.before, this.after)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.list.length === 0) {\r\n            return <h3 className=\"text-center\">There's nothing here!</h3>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {this.props.list.map(post => (\r\n                    <PostPreview\r\n                        key={post._id}\r\n                        data={{\r\n                            title: post.title,\r\n                            author: post.username,\r\n                            date: post.createdAt.substring(0, 10),\r\n                            postDestination: \"/post?id=\" + post._id,\r\n                            userDestination: \"/user/\" + post.username,\r\n                        }}\r\n                    />\r\n                ))}\r\n\r\n                <nav>\r\n                    <ul className=\"pagination\">\r\n                        {this.state.page > \"1\" && (\r\n                            <li className=\"page-item\">\r\n                                <Link\r\n                                    className=\"page-link border-dark text-dark\"\r\n                                    to={\r\n                                        \"/\" +\r\n                                        this.props.listType +\r\n                                        (this.props.listType === \"user\"\r\n                                            ? \"/\" + this.props.username\r\n                                            : \"\") +\r\n                                        \"?page=\" +\r\n                                        (parseInt(\r\n                                            this.state.page\r\n                                                ? this.state.page\r\n                                                : \"1\"\r\n                                        ) -\r\n                                            1) +\r\n                                        \"&after=\" +\r\n                                        (this.props.list.length > 0\r\n                                            ? this.props.list[0].createdAt\r\n                                            : \"\")\r\n                                    }\r\n                                >\r\n                                    Previous\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                        {!this.props.last && (\r\n                            <li className=\"page-item\">\r\n                                <Link\r\n                                    className=\"page-link border-dark text-dark\"\r\n                                    to={\r\n                                        \"/\" +\r\n                                        this.props.listType +\r\n                                        (this.props.listType === \"user\"\r\n                                            ? \"/\" + this.props.username\r\n                                            : \"\") +\r\n                                        \"?page=\" +\r\n                                        (parseInt(\r\n                                            this.state.page\r\n                                                ? this.state.page\r\n                                                : \"1\"\r\n                                        ) +\r\n                                            1) +\r\n                                        \"&before=\" +\r\n                                        this.props.list[\r\n                                            this.props.list.length - 1\r\n                                        ].createdAt\r\n                                    }\r\n                                >\r\n                                    Next\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoading: state.postList.isLoading,\r\n    list: state.postList.list,\r\n    last: state.postList.last,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    allPosts,\r\n    followingPosts,\r\n    userPosts,\r\n    searchPosts,\r\n})(PostList)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport PostList from \"../PostList\"\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        if (this.props.isAuthenticated === null) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>\r\n                    {this.props.isAuthenticated\r\n                        ? this.props.noFollowing && !this.props.isLoading\r\n                            ? \"Discover\"\r\n                            : \"Following\"\r\n                        : \"All Posts\"}\r\n                </h1>\r\n                <br />\r\n                <PostList\r\n                    listType={\r\n                        this.props.isAuthenticated && !this.props.noFollowing\r\n                            ? \"following\"\r\n                            : \"all\"\r\n                    }\r\n                    location={this.props.location}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    noFollowing: state.postList.noFollowing,\r\n    isLoading: state.postList.isLoading,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n","import axios from \"axios\"\r\n\r\nimport {\r\n    POST_SUCCESS,\r\n    POST_TOO_SHORT,\r\n    POST_NO_TITLE,\r\n    CREATING_POST,\r\n    CREATE_POST_ERROR,\r\n    EDIT_POST,\r\n    DIFF_TITLE,\r\n} from \"../actionTypes\"\r\n\r\nexport const postSuccess = output => (dispatch, getState) => {\r\n    dispatch({ type: CREATING_POST })\r\n\r\n    const newPost = {\r\n        title: output.blocks[0].data.text,\r\n        content: output,\r\n    }\r\n    const body = JSON.stringify(newPost)\r\n\r\n    axios\r\n        .post(\"/posts/create\", body, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: POST_SUCCESS,\r\n                payload: {\r\n                    newPostId: res.data.post._id,\r\n                },\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({ type: CREATE_POST_ERROR })\r\n        })\r\n}\r\n\r\nexport const editPost = (id, output) => (dispatch, getState) => {\r\n    dispatch({ type: CREATING_POST })\r\n\r\n    const newContent = { content: output }\r\n    const body = JSON.stringify(newContent)\r\n\r\n    axios\r\n        .patch(\"/posts/id/\" + id, body, tokenConfig(getState))\r\n        .then(() => {\r\n            dispatch({\r\n                type: EDIT_POST,\r\n                payload: {\r\n                    newPostId: id,\r\n                },\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({ type: CREATE_POST_ERROR })\r\n        })\r\n}\r\n\r\nexport const postTooShort = () => {\r\n    return { type: POST_TOO_SHORT }\r\n}\r\n\r\nexport const postNoTitle = () => {\r\n    return { type: POST_NO_TITLE }\r\n}\r\n\r\nexport const diffTitle = oldTitle => {\r\n    return {\r\n        type: DIFF_TITLE,\r\n        payload: {\r\n            oldTitle,\r\n        },\r\n    }\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localStorage\r\n    const token = getState().auth.token\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token\r\n    }\r\n\r\n    return config\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport EditorJS from \"@editorjs/editorjs\"\r\n\r\nimport Header from \"@editorjs/header\"\r\nimport SimpleImage from \"@editorjs/simple-image\"\r\nimport Delimiter from \"@editorjs/delimiter\"\r\nimport List from \"@editorjs/list\"\r\nimport Underline from \"@editorjs/underline\"\r\nimport InlineCode from \"@editorjs/inline-code\"\r\n\r\nimport \"../styles/createPost.css\"\r\nimport {\r\n    postSuccess,\r\n    postTooShort,\r\n    postNoTitle,\r\n} from \"../redux/createPost/createPostActions\"\r\n\r\nclass CreatePost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editorIsReady: false,\r\n        }\r\n        this.handlePost = this.handlePost.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editor = new EditorJS({\r\n            holder: \"editorjs\",\r\n            placeholder: \"New Post\",\r\n            autofocus: true,\r\n\r\n            tools: {\r\n                header: Header,\r\n                simpleImage: SimpleImage,\r\n                delimiter: Delimiter,\r\n                list: List,\r\n                underline: Underline,\r\n                inlineCode: InlineCode,\r\n            },\r\n\r\n            onReady: () => {\r\n                this.setState({\r\n                    editorIsReady: true,\r\n                })\r\n            },\r\n\r\n            data: {\r\n                time: 0,\r\n                blocks: [\r\n                    {\r\n                        type: \"header\",\r\n                        data: {\r\n                            text: \"New Post\",\r\n                            level: 1,\r\n                        },\r\n                    },\r\n                ],\r\n                version: \"2.18.0\",\r\n            },\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/login\"\r\n        }\r\n    }\r\n\r\n    handlePost() {\r\n        this.editor\r\n            .save()\r\n            .then(output => {\r\n                const { blocks } = output\r\n\r\n                // There must be at least 2 blocks, and the first must be an h1\r\n                if (blocks.length < 2) {\r\n                    this.props.postTooShort()\r\n                } else if (\r\n                    blocks[0].type !== \"header\" ||\r\n                    blocks[0].data.level !== 1\r\n                ) {\r\n                    this.props.postNoTitle()\r\n                } else {\r\n                    this.props.postSuccess(output)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Saving failed: \" + err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"editorjs\" />\r\n                {this.state.editorIsReady ? (\r\n                    <div>\r\n                        {this.props.error ? (\r\n                            <div className=\"alert alert-danger text-center\">\r\n                                {this.props.error.msg}\r\n                            </div>\r\n                        ) : null}\r\n\r\n                        <button\r\n                            className=\"post-button btn btn-lg btn-success btn-block\"\r\n                            onClick={this.handlePost}\r\n                        >\r\n                            {this.props.creatingPost ? (\r\n                                <span className=\"spinner-border spinner-border-sm\" />\r\n                            ) : (\r\n                                \"Post\"\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    error: state.createPost.error,\r\n    creatingPost: state.createPost.creatingPost,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    postSuccess,\r\n    postTooShort,\r\n    postNoTitle,\r\n})(CreatePost)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport EditorJS from \"@editorjs/editorjs\"\r\nimport qs from \"qs\"\r\n\r\nimport Header from \"@editorjs/header\"\r\nimport SimpleImage from \"@editorjs/simple-image\"\r\nimport Delimiter from \"@editorjs/delimiter\"\r\nimport List from \"@editorjs/list\"\r\nimport Underline from \"@editorjs/underline\"\r\nimport InlineCode from \"@editorjs/inline-code\"\r\n\r\nimport \"../styles/createPost.css\"\r\nimport {\r\n    editPost,\r\n    postTooShort,\r\n    postNoTitle,\r\n    diffTitle,\r\n} from \"../redux/createPost/createPostActions\"\r\nimport { getPost, noPostId } from \"../redux/post/postActions\"\r\n\r\nclass EditPost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editorIsReady: false,\r\n        }\r\n        this.handlePost = this.handlePost.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Load old post\r\n        this.id = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        }).id\r\n\r\n        if (this.id) {\r\n            this.props.getPost(this.id)\r\n        } else {\r\n            this.props.noPostId()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/login\"\r\n        }\r\n\r\n        if (!this.editor && this.props.foundPost) {\r\n            this.editor = new EditorJS({\r\n                holder: \"editorjs\",\r\n                placeholder: \"Click here to start writing!\",\r\n\r\n                tools: {\r\n                    header: Header,\r\n                    simpleImage: SimpleImage,\r\n                    delimiter: Delimiter,\r\n                    list: List,\r\n                    underline: Underline,\r\n                    inlineCode: InlineCode,\r\n                },\r\n\r\n                onReady: () => {\r\n                    this.setState({\r\n                        editorIsReady: true,\r\n                    })\r\n                },\r\n\r\n                data: this.props.content,\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePost() {\r\n        this.editor\r\n            .save()\r\n            .then(output => {\r\n                const { blocks } = output\r\n\r\n                // There must be at least 2 blocks, and the first must be an h1\r\n                if (blocks.length < 2) {\r\n                    this.props.postTooShort()\r\n                } else if (\r\n                    blocks[0].type !== \"header\" ||\r\n                    blocks[0].data.level !== 1\r\n                ) {\r\n                    this.props.postNoTitle()\r\n                } else if (this.props.title !== blocks[0].data.text) {\r\n                    this.props.diffTitle(this.props.title)\r\n                } else {\r\n                    this.props.editPost(this.id, output)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Saving failed: \" + err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.foundPost === false) {\r\n            return (\r\n                <div>\r\n                    <p className=\"text-center\">Couldn't find post</p>\r\n                    <button\r\n                        className=\"retry-btn btn btn-sm btn-secondary btn-block\"\r\n                        onClick={() => window.location.reload(true)}\r\n                    >\r\n                        Retry\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (\r\n            this.props.isAuthenticated &&\r\n            this.props.author !== this.props.user.username\r\n        ) {\r\n            return (\r\n                <div className=\"alert alert-danger text-center\">\r\n                    You are not authorized to edit this post.\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"editorjs\" />\r\n                {this.state.editorIsReady ? (\r\n                    <div>\r\n                        {this.props.error ? (\r\n                            <div className=\"alert alert-danger text-center\">\r\n                                {this.props.error.msg}\r\n                            </div>\r\n                        ) : null}\r\n\r\n                        <button\r\n                            className=\"post-button btn btn-lg btn-success btn-block\"\r\n                            onClick={this.handlePost}\r\n                        >\r\n                            {this.props.creatingPost ? (\r\n                                <span className=\"spinner-border spinner-border-sm\" />\r\n                            ) : (\r\n                                \"Save\"\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    error: state.createPost.error,\r\n    creatingPost: state.createPost.creatingPost,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    user: state.auth.user,\r\n\r\n    title: state.post.title,\r\n    content: state.post.content,\r\n    author: state.post.username,\r\n\r\n    foundPost: state.post.foundPost,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    editPost,\r\n    postTooShort,\r\n    postNoTitle,\r\n    diffTitle,\r\n    getPost,\r\n    noPostId,\r\n})(EditPost)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport PostList from \"../PostList\"\r\nimport {\r\n    loadFollowingList,\r\n    follow,\r\n    unfollow,\r\n} from \"../../redux/auth/authActions\"\r\nimport { userPosts } from \"../../redux/postList/postListActions\"\r\nimport \"../../styles/userPage.css\"\r\n\r\nclass UserPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isFollowing: null,\r\n        }\r\n        this.toggleFollow = this.toggleFollow.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadFollowingList()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Check if the user is on the following list\r\n        if (this.props.followingList && this.state.isFollowing === null) {\r\n            let f = null\r\n            this.props.followingList.forEach((followingItem, idx) => {\r\n                if (followingItem === this.props.match.params.username) {\r\n                    f = true\r\n                    this.setState({ isFollowing: true })\r\n                }\r\n            })\r\n            if (f === null) {\r\n                this.setState({ isFollowing: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleFollow() {\r\n        if (this.state.isFollowing) {\r\n            this.props.unfollow(this.props.match.params.username)\r\n        } else {\r\n            this.props.follow(this.props.match.params.username)\r\n        }\r\n        this.setState(prevState => ({\r\n            isFollowing: !prevState.isFollowing,\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        if (this.props.userNotFound === null) {\r\n            this.props.userPosts(this.props.match.params.username)\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.userNotFound) {\r\n            return (\r\n                <div>\r\n                    <p className=\"text-center\">Couldn't find user</p>\r\n                    <button\r\n                        className=\"retry-btn btn btn-sm btn-secondary btn-block\"\r\n                        onClick={() => window.location.reload(true)}\r\n                    >\r\n                        Retry\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <h1 className=\"col col-md-auto\">\r\n                        {this.props.match.params.username}\r\n                    </h1>\r\n                    {this.state.isFollowing !== null &&\r\n                    this.props.self &&\r\n                    this.props.self.username !==\r\n                        this.props.match.params.username ? (\r\n                        this.state.isFollowing ? (\r\n                            <button\r\n                                className=\"follow-btn col btn btn-sm btn-secondary btn-block\"\r\n                                onClick={this.toggleFollow}\r\n                            >\r\n                                Unfollow\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                className=\"follow-btn col btn btn-sm btn-primary btn-block\"\r\n                                onClick={this.toggleFollow}\r\n                            >\r\n                                Follow\r\n                            </button>\r\n                        )\r\n                    ) : null}\r\n                </div>\r\n                <br />\r\n                <PostList\r\n                    listType=\"user\"\r\n                    username={this.props.match.params.username}\r\n                    location={this.props.location}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    userNotFound: state.postList.userNotFound,\r\n    followingList: state.auth.followingList,\r\n    self: state.auth.user,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    loadFollowingList,\r\n    userPosts,\r\n    follow,\r\n    unfollow,\r\n})(UserPage)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport qs from \"qs\"\r\n\r\nimport PostList from \"../PostList\"\r\n\r\nclass AllPosts extends React.Component {\r\n    componentDidMount() {\r\n        const query = qs.parse(this.props.location, {\r\n            ignoreQueryPrefix: true,\r\n        })\r\n        this.page = query.page ? query.page : \"null\"\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false && this.page === \"none\") {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated === null) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>All Posts</h1>\r\n                <br />\r\n                <PostList listType=\"all\" location={this.props.location} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(AllPosts)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport PostList from \"../PostList\"\r\n\r\nclass FollowingPosts extends React.Component {\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/login\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated === null) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.noFollowing) {\r\n            return (\r\n                <div>\r\n                    <h1>Following</h1>\r\n                    <h3 className=\"text-center\">There's nothing here!</h3>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1>Following</h1>\r\n                <br />\r\n                <PostList listType=\"following\" location={this.props.location} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    noFollowing: state.postList.noFollowing,\r\n})\r\n\r\nexport default connect(mapStateToProps)(FollowingPosts)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport qs from \"qs\"\r\n\r\nimport PostList from \"../PostList\"\r\n\r\nclass SearchPosts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            target: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const target = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        }).target\r\n        if (target === \"\") {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n        this.setState({ target })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/login\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.target !== \"\") {\r\n            return (\r\n                <div>\r\n                    <h1>{'Search - \"' + this.state.target + '\"'}</h1>\r\n                    <br />\r\n                    <PostList\r\n                        listType=\"search\"\r\n                        location={this.props.location}\r\n                        target={this.state.target}\r\n                    />\r\n                </div>\r\n            )\r\n        } else {\r\n            return <div />\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect()(SearchPosts)\r\n","import React from \"react\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./redux/store\"\r\nimport { HashRouter as Router, Route } from \"react-router-dom\"\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport { loadUser } from \"./redux/auth/authActions\"\r\nimport {\r\n    Navbar,\r\n    Signup,\r\n    Login,\r\n    Settings,\r\n    Post,\r\n    Home,\r\n    CreatePost,\r\n    UserPage,\r\n    AllPosts,\r\n    FollowingPosts,\r\n    EditPost,\r\n    SearchPosts,\r\n} from \"./components\"\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        store.dispatch(loadUser())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <div>\r\n                        <Navbar />\r\n                        <br />\r\n                        <div className=\"container-fluid\">\r\n                            <Route path=\"/\" component={Home} exact />\r\n                            <Route path=\"/all\" component={AllPosts} />\r\n                            <Route\r\n                                path=\"/following\"\r\n                                component={FollowingPosts}\r\n                            />\r\n                            <Route path=\"/signup\" component={Signup} />\r\n                            <Route path=\"/login\" component={Login} />\r\n                            <Route path=\"/settings\" component={Settings} />\r\n                            <Route path=\"/post\" component={Post} />\r\n                            <Route path=\"/create\" component={CreatePost} />\r\n                            <Route path=\"/edit\" component={EditPost} />\r\n                            <Route\r\n                                path=\"/user/:username\"\r\n                                component={UserPage}\r\n                            />\r\n                            <Route path=\"/search\" component={SearchPosts} />\r\n                        </div>\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nimport axios from \"axios\"\r\naxios.defaults.baseURL = \"https://blap-api.herokuapp.com/api\"\r\n// axios.defaults.baseURL = \"http://localhost:5000/api\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}