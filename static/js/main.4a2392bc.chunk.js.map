{"version":3,"sources":["redux/error/errorReducer.js","redux/auth/authReducer.js","redux/post/postReducer.js","redux/postList/postListReducer.js","redux/createPost/createPostReducer.js","redux/reducers.js","redux/actionTypes.js","redux/store.js","redux/error/errorActions.js","redux/auth/authActions.js","components/Navbar.js","components/auth/Signup.js","components/auth/Login.js","components/auth/Settings.js","redux/post/postActions.js","components/post/PostComponent.js","components/post/PostRender.js","components/post/Post.js","components/PostPreview.js","redux/postList/postListActions.js","components/PostList.js","components/ListViews/Home.js","redux/createPost/createPostActions.js","components/CreatePost.js","components/EditPost.js","components/ListViews/UserPage.js","components/ListViews/AllPosts.js","components/ListViews/FollowingPosts.js","components/ListViews/SearchPosts.js","App.js","serviceWorker.js","index.js"],"names":["initialState","msg","status","id","token","localStorage","getItem","isAuthenticated","isLoading","user","loadingSubmit","followingList","title","content","author","createdAt","foundPost","deletedPost","list","noFollowing","userNotFound","last","error","creatingPost","combineReducers","state","action","type","payload","auth","setItem","removeItem","window","location","reload","newFollowing","post","postList","createPost","newPostId","oldTitle","middleWare","thunk","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","returnErrors","clearErrors","loadFollowingList","dispatch","getState","axios","get","tokenConfig","then","res","data","following","catch","err","response","unfollow","target","body","JSON","stringify","patch","config","headers","Navbar","props","searchTarget","showMenu","onChange","bind","submitSearch","toggleMenu","e","name","value","this","setState","preventDefault","trim","prevState","showMenuText","collapseRightSpacing","collapseButtonPadding","className","to","onClick","autoComplete","onSubmit","placeholder","username","width","height","viewBox","fill","xmlns","fillRule","d","logout","React","Component","connect","Signup","password","prevProps","newUser","signup","autoFocus","disabled","Login","login","Settings","deleteWarning","showFollowing","deleteUser","openFollowing","followingBtnStyling","length","slice","reverse","map","key","delete","getPost","toString","noPostId","s","text","createElement","level","classModifications","styleModifications","withBorder","stretched","maxWidth","margin","display","src","url","style","alt","caption","items","idx","element","dangerouslySetInnerHTML","__html","blocks","block","PostComponent","Post","deletePost","qs","parse","search","ignoreQueryPrefix","substring","PostRender","PostPreview","postDestination","userDestination","date","userPosts","before","after","posts","PostList","page","updateList","query","listType","allPosts","followingPosts","searchPosts","previousModifier","nextModifier","_id","parseInt","Home","postTooShort","postNoTitle","CreatePost","editorIsReady","handlePost","editor","EditorJS","holder","autofocus","tools","header","Header","simpleImage","SimpleImage","delimiter","Delimiter","List","underline","Underline","inlineCode","InlineCode","onReady","time","version","save","output","postSuccess","console","log","newPost","EditPost","diffTitle","editPost","newContent","UserPage","isFollowing","toggleFollow","f","forEach","followingItem","match","params","follow","self","AllPosts","FollowingPosts","SearchPosts","App","store","path","component","exact","Boolean","hostname","defaults","baseURL","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4a2392bc.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    msg: {},\r\n    status: null,\r\n    id: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_ERRORS:\r\n            return {\r\n                msg: action.payload.msg,\r\n                status: action.payload.status,\r\n                id: action.payload.id,\r\n            }\r\n        case CLEAR_ERRORS:\r\n            return {\r\n                msg: {},\r\n                status: null,\r\n                id: null,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    DELETE_USER,\r\n    LOADING_SUBMIT,\r\n    LOAD_FOLLOWING,\r\n    FOLLOW,\r\n    UNFOLLOW,\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    token: localStorage.getItem(\"token\"),\r\n    isAuthenticated: null,\r\n    isLoading: null,\r\n    user: null,\r\n    loadingSubmit: false,\r\n    followingList: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case USER_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        case USER_LOADED:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                user: action.payload,\r\n            }\r\n        case LOADING_SUBMIT:\r\n            return {\r\n                ...state,\r\n                loadingSubmit: true,\r\n            }\r\n        case LOGIN_SUCCESS:\r\n        case SIGNUP_SUCCESS:\r\n            localStorage.setItem(\"token\", action.payload.token)\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isAuthenticated: true,\r\n                isLoading: false,\r\n                loadingSubmit: false,\r\n            }\r\n        case LOGOUT_SUCCESS:\r\n        case DELETE_USER:\r\n            localStorage.removeItem(\"token\")\r\n            window.location.reload(true)\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n            }\r\n        case LOAD_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followingList: action.payload.followingList,\r\n            }\r\n        case FOLLOW:\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                followingList: action.payload.newFollowing,\r\n            }\r\n        case AUTH_ERROR:\r\n        case LOGIN_FAIL:\r\n        case SIGNUP_FAIL:\r\n            localStorage.removeItem(\"token\")\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                user: null,\r\n                isAuthenticated: false,\r\n                isLoading: false,\r\n                loadingSubmit: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    GET_POST,\r\n    GET_POST_ERROR,\r\n    POST_LOADING,\r\n    DELETE_POST,\r\n    NO_POST_ID,\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    title: null,\r\n    content: null,\r\n    author: null,\r\n    createdAt: null,\r\n    isLoading: null,\r\n    foundPost: null,\r\n    deletedPost: false,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case GET_POST:\r\n            return {\r\n                ...action.payload,\r\n                foundPost: true,\r\n                isLoading: false,\r\n            }\r\n        case GET_POST_ERROR:\r\n        case NO_POST_ID:\r\n            return {\r\n                ...state,\r\n                foundPost: false,\r\n                isLoading: false,\r\n            }\r\n        case POST_LOADING:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        case DELETE_POST:\r\n            return {\r\n                ...initialState,\r\n                deletedPost: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    ALL_POSTS,\r\n    FOLLOWING_POSTS,\r\n    LOADING_POSTS,\r\n    USER_POSTS,\r\n    USER_NOT_FOUND,\r\n    SEARCH_POSTS,\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    isLoading: null,\r\n    list: [],\r\n    noFollowing: null,\r\n    userNotFound: null,\r\n    last: null,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOADING_POSTS:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                last: true,\r\n            }\r\n        case ALL_POSTS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isLoading: false,\r\n                noFollowing: null,\r\n            }\r\n        case USER_POSTS:\r\n            return {\r\n                ...state,\r\n                ...action.payload,\r\n                isLoading: false,\r\n                noFollowing: null,\r\n                userNotFound: false,\r\n            }\r\n        case USER_NOT_FOUND:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                userNotFound: true,\r\n            }\r\n        case FOLLOWING_POSTS:\r\n        case SEARCH_POSTS:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                ...action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n    POST_SUCCESS,\r\n    POST_TOO_SHORT,\r\n    POST_NO_TITLE,\r\n    CREATE_POST_ERROR,\r\n    CREATING_POST,\r\n    EDIT_POST,\r\n    DIFF_TITLE,\r\n} from \"../actionTypes\"\r\n\r\nconst initialState = {\r\n    error: null,\r\n    creatingPost: false,\r\n}\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATING_POST:\r\n            return {\r\n                ...state,\r\n                creatingPost: true,\r\n                error: null,\r\n            }\r\n        case POST_SUCCESS:\r\n        case EDIT_POST:\r\n            window.location = \"/blap/#/post?id=\" + action.payload.newPostId\r\n            return {\r\n                ...state,\r\n                creatingPost: false,\r\n            }\r\n        case POST_TOO_SHORT:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    msg: \"Your post must have at least 2 elements\",\r\n                },\r\n                creatingPost: false,\r\n            }\r\n        case POST_NO_TITLE:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    msg:\r\n                        \"The first element of your post must be the title (H1)\",\r\n                },\r\n                creatingPost: false,\r\n            }\r\n        case CREATE_POST_ERROR:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    msg: \"An unknown error occured\",\r\n                },\r\n                creatingPost: false,\r\n            }\r\n        case DIFF_TITLE:\r\n            return {\r\n                ...state,\r\n                error: {\r\n                    msg:\r\n                        'You cannot edit the title of \"' +\r\n                        action.payload.oldTitle +\r\n                        '\"',\r\n                },\r\n                creatingPost: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\"\r\n\r\nimport errorReducer from \"./error/errorReducer\"\r\nimport authReducer from \"./auth/authReducer\"\r\nimport postReducer from \"./post/postReducer\"\r\nimport postListReducer from \"./postList/postListReducer\"\r\nimport createPostReducer from \"./createPost/createPostReducer\"\r\n\r\nexport default combineReducers({\r\n    error: errorReducer,\r\n    auth: authReducer,\r\n    post: postReducer,\r\n    postList: postListReducer,\r\n    createPost: createPostReducer,\r\n})\r\n","// auth\r\nexport const USER_LOADING = \"USER_LOADING\"\r\nexport const USER_LOADED = \"USER_LOADED\"\r\nexport const AUTH_ERROR = \"AUTH_ERROR\"\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\"\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\"\r\nexport const LOGOUT_SUCCESS = \"LOGOUT_SUCCESS\"\r\nexport const SIGNUP_SUCCESS = \"SIGNUP_SUCCESS\"\r\nexport const SIGNUP_FAIL = \"SIGNUP_FAIL\"\r\nexport const DELETE_USER = \"DELETE_USER\"\r\nexport const LOADING_SUBMIT = \"LOADING_SUBMIT\"\r\nexport const LOAD_FOLLOWING = \"LOAD_FOLLOWING\"\r\nexport const FOLLOW = \"FOLLOW\"\r\nexport const UNFOLLOW = \"UNFOLLOW\"\r\n\r\n// error\r\nexport const GET_ERRORS = \"GET_ERRORS\"\r\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\"\r\n\r\n// post\r\nexport const GET_POST = \"GET_POST\"\r\nexport const GET_POST_ERROR = \"GET_POST_ERROR\"\r\nexport const POST_LOADING = \"POST_LOADING\"\r\nexport const DELETE_POST = \"DELETE_POST\"\r\nexport const NO_POST_ID = \"NO_POST_ID\"\r\n\r\n// postList\r\nexport const ALL_POSTS = \"ALL_POSTS\"\r\nexport const FOLLOWING_POSTS = \"FOLLOWING_POSTS\"\r\nexport const USER_POSTS = \"USER_POSTS\"\r\nexport const SEARCH_POSTS = \"SEARCH_POSTS\"\r\nexport const USER_NOT_FOUND = \"USER_NOT_FOUND\"\r\nexport const LOADING_POSTS = \"LOADING_POSTS\"\r\n\r\n// createPost\r\nexport const POST_SUCCESS = \"POST_SUCCESS\"\r\nexport const POST_TOO_SHORT = \"POST_TOO_SHORT\"\r\nexport const POST_NO_TITLE = \"POST_NO_TITLE\"\r\nexport const CREATE_POST_ERROR = \"CREATE_POST_ERROR\"\r\nexport const CREATING_POST = \"CREATING_POST\"\r\nexport const EDIT_POST = \"EDIT_POST\"\r\nexport const DIFF_TITLE = \"DIFF_TITLE\"\r\n","import { createStore, applyMiddleware, compose } from \"redux\"\r\nimport thunk from \"redux-thunk\"\r\nimport reducers from \"./reducers\"\r\n\r\nconst initialState = {}\r\n\r\nconst middleWare = [thunk]\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nexport default createStore(\r\n    reducers,\r\n    initialState,\r\n    composeEnhancers(applyMiddleware(...middleWare))\r\n)\r\n","import { GET_ERRORS, CLEAR_ERRORS } from \"../actionTypes\"\r\n\r\n// RETURN ERRORS\r\nexport const returnErrors = (msg, status, id = null) => {\r\n    return {\r\n        type: GET_ERRORS,\r\n        payload: { msg, status, id },\r\n    }\r\n}\r\n\r\n// CLEAR ERRORS\r\nexport const clearErrors = () => {\r\n    return {\r\n        type: CLEAR_ERRORS,\r\n    }\r\n}\r\n","import axios from \"axios\"\r\n\r\nimport { returnErrors } from \"../error/errorActions\"\r\nimport {\r\n    USER_LOADED,\r\n    USER_LOADING,\r\n    AUTH_ERROR,\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    LOGOUT_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    DELETE_USER,\r\n    LOADING_SUBMIT,\r\n    LOAD_FOLLOWING,\r\n    FOLLOW,\r\n    UNFOLLOW,\r\n} from \"../actionTypes\"\r\n\r\n// Check token & load user\r\nexport const loadUser = () => (dispatch, getState) => {\r\n    // User loading\r\n    dispatch({ type: USER_LOADING })\r\n\r\n    axios\r\n        .get(\"/auth/user\", tokenConfig(getState))\r\n        .then(res =>\r\n            dispatch({\r\n                type: USER_LOADED,\r\n                payload: res.data,\r\n            })\r\n        )\r\n        .catch(err => {\r\n            if (err.response) {\r\n                dispatch(returnErrors(err.response.data, err.response.status))\r\n            }\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Sign up user\r\nexport const signup = ({ username, password }) => dispatch => {\r\n    dispatch({\r\n        type: LOADING_SUBMIT,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // Request body\r\n    const body = JSON.stringify({ username, password })\r\n\r\n    axios\r\n        .post(\"/users/signup\", body, config)\r\n        .then(res =>\r\n            dispatch({\r\n                type: SIGNUP_SUCCESS,\r\n                payload: res.data,\r\n            })\r\n        )\r\n        .catch(err => {\r\n            dispatch(\r\n                returnErrors(\r\n                    err.response.data,\r\n                    err.response.status,\r\n                    \"SIGNUP_FAIL\"\r\n                )\r\n            )\r\n            dispatch({\r\n                type: SIGNUP_FAIL,\r\n            })\r\n        })\r\n}\r\n\r\n// Log in user\r\nexport const login = ({ username, password }) => dispatch => {\r\n    dispatch({\r\n        type: LOADING_SUBMIT,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // Request body\r\n    const body = JSON.stringify({ username, password })\r\n\r\n    axios\r\n        .post(\"/auth/login\", body, config)\r\n        .then(res =>\r\n            dispatch({\r\n                type: LOGIN_SUCCESS,\r\n                payload: res.data,\r\n            })\r\n        )\r\n        .catch(err => {\r\n            dispatch(\r\n                returnErrors(\r\n                    err.response.data,\r\n                    err.response.status,\r\n                    \"LOGIN_FAIL\"\r\n                )\r\n            )\r\n            dispatch({\r\n                type: LOGIN_FAIL,\r\n            })\r\n        })\r\n}\r\n\r\n// Log out user\r\nexport const logout = () => {\r\n    return {\r\n        type: LOGOUT_SUCCESS,\r\n    }\r\n}\r\n\r\n// Delete the user\r\nexport const deleteUser = () => (dispatch, getState) => {\r\n    axios\r\n        .delete(\"/auth/delete\", tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_USER,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Load the user's following list\r\nexport const loadFollowingList = () => (dispatch, getState) => {\r\n    axios\r\n        .get(\"/auth/following\", tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: LOAD_FOLLOWING,\r\n                payload: {\r\n                    followingList: res.data.following,\r\n                },\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Follow a user\r\nexport const follow = target => (dispatch, getState) => {\r\n    const body = JSON.stringify({ user: target })\r\n\r\n    axios\r\n        .patch(\"/auth/follow\", body, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: FOLLOW,\r\n                payload: {\r\n                    newFollowing: res.data.following,\r\n                },\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Unfollow a user\r\nexport const unfollow = target => (dispatch, getState) => {\r\n    const body = JSON.stringify({ user: target })\r\n\r\n    axios\r\n        .patch(\"/auth/unfollow\", body, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: UNFOLLOW,\r\n                payload: {\r\n                    newFollowing: res.data.following,\r\n                },\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localStorage\r\n    const token = getState().auth.token\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token\r\n    }\r\n\r\n    return config\r\n}\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"../styles/navbar.css\"\r\nimport { logout } from \"../redux/auth/authActions\"\r\n\r\nclass Navbar extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            searchTarget: \"\",\r\n            showMenu: false,\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.submitSearch = this.submitSearch.bind(this)\r\n        this.toggleMenu = this.toggleMenu.bind(this)\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.target\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    submitSearch(e) {\r\n        e.preventDefault()\r\n        if (this.state.searchTarget.trim() === \"\") {\r\n            return\r\n        }\r\n\r\n        window.location =\r\n            \"/blap/#/search?target=\" + this.state.searchTarget.trim()\r\n        window.location.reload(true)\r\n    }\r\n\r\n    toggleMenu() {\r\n        this.setState(prevState => ({\r\n            showMenu: !prevState.showMenu,\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        let showMenuText = \"\"\r\n        let collapseRightSpacing = \"\"\r\n        let collapseButtonPadding = \"\"\r\n        if (this.state.showMenu) {\r\n            showMenuText = \" show\"\r\n            collapseRightSpacing = \" mr-3\"\r\n            collapseButtonPadding = \" px-2\"\r\n        }\r\n\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg sticky-top navbar-dark bg-dark\">\r\n                <Link\r\n                    to=\"/\"\r\n                    className=\"navbar-brand\"\r\n                    onClick={() => this.setState({ showMenu: false })}\r\n                >\r\n                    <span className=\"font-weight-bold text-light\">blap</span>\r\n                </Link>\r\n\r\n                <button className=\"navbar-toggler\" onClick={this.toggleMenu}>\r\n                    <span className=\"navbar-toggler-icon\" />\r\n                </button>\r\n\r\n                <div className={\"collapse navbar-collapse\" + showMenuText}>\r\n                    <ul className=\"left-nav navbar-nav\">\r\n                        <li className=\"create-link navbar-item mr-2\">\r\n                            <Link\r\n                                to={\r\n                                    this.props.isAuthenticated\r\n                                        ? \"/create\"\r\n                                        : \"/login\"\r\n                                }\r\n                                className=\"nav-link btn btn-primary btn-sm\"\r\n                                onClick={() =>\r\n                                    this.setState({ showMenu: false })\r\n                                }\r\n                            >\r\n                                <span className=\"text-light\">Create Post</span>\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"all-link navbar-item\">\r\n                            <Link\r\n                                to={this.props.isAuthenticated ? \"/all\" : \"/\"}\r\n                                className=\"nav-link\"\r\n                                onClick={() =>\r\n                                    this.setState({ showMenu: false })\r\n                                }\r\n                            >\r\n                                All\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"following-link navbar-item\">\r\n                            <Link\r\n                                to={\r\n                                    this.props.isAuthenticated\r\n                                        ? \"/following\"\r\n                                        : \"/login\"\r\n                                }\r\n                                className=\"nav-link\"\r\n                                onClick={() =>\r\n                                    this.setState({ showMenu: false })\r\n                                }\r\n                            >\r\n                                Following\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    {!this.props.isLoading ? (\r\n                        <ul className=\"right-nav navbar-nav ml-md-auto\">\r\n                            <div className=\"search-bar\">\r\n                                <form\r\n                                    className=\"form-inline my-2 my-lg-0\"\r\n                                    autoComplete=\"off\"\r\n                                    onSubmit={this.submitSearch}\r\n                                >\r\n                                    <input\r\n                                        className=\"form-control mr-2\"\r\n                                        placeholder=\"Search\"\r\n                                        value={this.state.searchTarget}\r\n                                        onChange={this.onChange}\r\n                                        name=\"searchTarget\"\r\n                                    />\r\n                                    {/* <button\r\n                                        className=\"btn btn-outline-light my-2 my-sm-0 mr-3\"\r\n                                        onClick={this.submitSearch}\r\n                                    >\r\n                                        Search\r\n                                    </button> */}\r\n                                </form>\r\n                            </div>\r\n\r\n                            {!this.props.isAuthenticated ? (\r\n                                <div className=\"logged-out\">\r\n                                    <li className=\"navbar-item\">\r\n                                        <Link\r\n                                            to=\"/login\"\r\n                                            className=\"nav-link\"\r\n                                            onClick={() =>\r\n                                                this.setState({\r\n                                                    showMenu: false,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <span\r\n                                                className={\r\n                                                    collapseButtonPadding\r\n                                                }\r\n                                            >\r\n                                                <svg\r\n                                                    width=\"1.5em\"\r\n                                                    height=\"1.5em\"\r\n                                                    viewBox=\"0 0 16 16\"\r\n                                                    className=\"bi bi-box-arrow-in-right text-success\"\r\n                                                    fill=\"currentColor\"\r\n                                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                >\r\n                                                    <path\r\n                                                        fillRule=\"evenodd\"\r\n                                                        d=\"M8.146 11.354a.5.5 0 0 1 0-.708L10.793 8 8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"\r\n                                                    />\r\n                                                    <path\r\n                                                        fillRule=\"evenodd\"\r\n                                                        d=\"M1 8a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 1 8z\"\r\n                                                    />\r\n                                                    <path\r\n                                                        fillRule=\"evenodd\"\r\n                                                        d=\"M13.5 14.5A1.5 1.5 0 0 0 15 13V3a1.5 1.5 0 0 0-1.5-1.5h-8A1.5 1.5 0 0 0 4 3v1.5a.5.5 0 0 0 1 0V3a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v10a.5.5 0 0 1-.5.5h-8A.5.5 0 0 1 5 13v-1.5a.5.5 0 0 0-1 0V13a1.5 1.5 0 0 0 1.5 1.5h8z\"\r\n                                                    />\r\n                                                </svg>\r\n                                            </span>\r\n                                        </Link>{\" \"}\r\n                                    </li>\r\n                                </div>\r\n                            ) : (\r\n                                <div className=\"logged-in\">\r\n                                    <li className=\"navbar-item\">\r\n                                        <Link\r\n                                            to={\r\n                                                \"/user/\" +\r\n                                                this.props.user.username\r\n                                            }\r\n                                            className={\r\n                                                \"nav-link\" +\r\n                                                collapseRightSpacing\r\n                                            }\r\n                                            onClick={() =>\r\n                                                this.setState({\r\n                                                    showMenu: false,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <svg\r\n                                                width=\"1.3em\"\r\n                                                height=\"1.3em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-person-circle\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            >\r\n                                                <path\r\n                                                    fillRule=\"evenodd\"\r\n                                                    d=\"M3 14s-1 0-1-1 1-4 6-4 6 3 6 4-1 1-1 1H3zm5-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"\r\n                                                />\r\n                                            </svg>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className=\"navbar-item\">\r\n                                        <Link\r\n                                            to=\"/settings\"\r\n                                            className={\r\n                                                \"nav-link\" +\r\n                                                collapseRightSpacing\r\n                                            }\r\n                                            onClick={() =>\r\n                                                this.setState({\r\n                                                    showMenu: false,\r\n                                                })\r\n                                            }\r\n                                        >\r\n                                            <svg\r\n                                                width=\"1.3em\"\r\n                                                height=\"1.3em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-gear-fill\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            >\r\n                                                <path\r\n                                                    fillRule=\"evenodd\"\r\n                                                    d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 0 0-5.86 2.929 2.929 0 0 0 0 5.858z\"\r\n                                                />\r\n                                            </svg>\r\n                                        </Link>\r\n                                    </li>\r\n                                    <li className={\"navbar-item\"}>\r\n                                        <Link\r\n                                            to=\"/\"\r\n                                            className=\"nav-link\"\r\n                                            onClick={() => {\r\n                                                this.props.logout()\r\n                                                this.setState({\r\n                                                    showMenu: false,\r\n                                                })\r\n                                            }}\r\n                                        >\r\n                                            <svg\r\n                                                width=\"1.5em\"\r\n                                                height=\"1.5em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-box-arrow-in-right text-danger\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                            >\r\n                                                <path\r\n                                                    fillRule=\"evenodd\"\r\n                                                    d=\"M8.146 11.354a.5.5 0 0 1 0-.708L10.793 8 8.146 5.354a.5.5 0 1 1 .708-.708l3 3a.5.5 0 0 1 0 .708l-3 3a.5.5 0 0 1-.708 0z\"\r\n                                                />\r\n                                                <path\r\n                                                    fillRule=\"evenodd\"\r\n                                                    d=\"M1 8a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 1 8z\"\r\n                                                />\r\n                                                <path\r\n                                                    fillRule=\"evenodd\"\r\n                                                    d=\"M13.5 14.5A1.5 1.5 0 0 0 15 13V3a1.5 1.5 0 0 0-1.5-1.5h-8A1.5 1.5 0 0 0 4 3v1.5a.5.5 0 0 0 1 0V3a.5.5 0 0 1 .5-.5h8a.5.5 0 0 1 .5.5v10a.5.5 0 0 1-.5.5h-8A.5.5 0 0 1 5 13v-1.5a.5.5 0 0 0-1 0V13a1.5 1.5 0 0 0 1.5 1.5h8z\"\r\n                                                />\r\n                                            </svg>\r\n                                        </Link>\r\n                                    </li>\r\n                                </div>\r\n                            )}\r\n                        </ul>\r\n                    ) : null}\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    isLoading: state.auth.isLoading,\r\n    user: state.auth.user,\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(Navbar)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"../../styles/signup.css\"\r\nimport { signup } from \"../../redux/auth/authActions\"\r\nimport { clearErrors } from \"../../redux/error/errorActions\"\r\n\r\nclass Signup extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            msg: null,\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { error, isAuthenticated } = this.props\r\n        if (error !== prevProps.error) {\r\n            // Check for a signup error\r\n            if (error.id === \"SIGNUP_FAIL\") {\r\n                this.setState({ msg: error.msg.msg })\r\n            } else {\r\n                this.setState({ msg: null })\r\n            }\r\n        }\r\n\r\n        if (isAuthenticated) {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        const { username, password } = this.state\r\n        const newUser = {\r\n            username,\r\n            password,\r\n        }\r\n\r\n        this.props.signup(newUser)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h1>Sign up</h1>\r\n                <form onSubmit={this.onSubmit} className=\"form-signin\">\r\n                    <input\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Username\"\r\n                        autoFocus\r\n                        className=\"form-control\"\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Password\"\r\n                        className=\"form-control\"\r\n                    />\r\n\r\n                    {this.state.msg ? (\r\n                        <div className=\"alert alert-danger\">\r\n                            {this.state.msg}\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <button\r\n                        className=\"btn btn-lg btn-primary btn-block\"\r\n                        disabled={this.props.loadingSubmit}\r\n                    >\r\n                        {this.props.loadingSubmit ? (\r\n                            <span className=\"spinner-border spinner-border-sm\" />\r\n                        ) : (\r\n                            \"Submit\"\r\n                        )}\r\n                    </button>\r\n                </form>\r\n\r\n                <p>\r\n                    Already have an account? <Link to=\"/login\">Log in</Link>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error,\r\n    loadingSubmit: state.auth.loadingSubmit,\r\n})\r\n\r\nexport default connect(mapStateToProps, { signup, clearErrors })(Signup)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport \"../../styles/signup.css\"\r\nimport { login } from \"../../redux/auth/authActions\"\r\nimport { clearErrors } from \"../../redux/error/errorActions\"\r\n\r\nclass Login extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            msg: null,\r\n        }\r\n        this.onChange = this.onChange.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { error, isAuthenticated } = this.props\r\n        if (error !== prevProps.error) {\r\n            // Check for a signup error\r\n            if (error.id === \"LOGIN_FAIL\") {\r\n                this.setState({ msg: error.msg.msg })\r\n            } else {\r\n                this.setState({ msg: null })\r\n            }\r\n        }\r\n\r\n        if (isAuthenticated) {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.target\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    }\r\n\r\n    onSubmit(e) {\r\n        e.preventDefault()\r\n\r\n        const { username, password } = this.state\r\n        const user = {\r\n            username,\r\n            password,\r\n        }\r\n\r\n        // Attempt to log in\r\n        this.props.login(user)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"text-center\">\r\n                <h1>Log in</h1>\r\n                <form onSubmit={this.onSubmit} className=\"form-signin\">\r\n                    <input\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Username\"\r\n                        autoFocus\r\n                        className=\"form-control\"\r\n                    />\r\n                    <input\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.onChange}\r\n                        placeholder=\"Password\"\r\n                        className=\"form-control\"\r\n                    />\r\n\r\n                    {this.state.msg ? (\r\n                        <div className=\"alert alert-danger\">\r\n                            {this.state.msg}\r\n                        </div>\r\n                    ) : null}\r\n\r\n                    <button\r\n                        className=\"btn btn-lg btn-primary btn-block\"\r\n                        disabled={this.props.loadingSubmit}\r\n                    >\r\n                        {this.props.loadingSubmit ? (\r\n                            <span className=\"spinner-border spinner-border-sm\" />\r\n                        ) : (\r\n                            \"Submit\"\r\n                        )}\r\n                    </button>\r\n                </form>\r\n\r\n                <p>\r\n                    Don't have an account? <Link to=\"/signup\">Sign up</Link>\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    error: state.error,\r\n    loadingSubmit: state.auth.loadingSubmit,\r\n})\r\n\r\nexport default connect(mapStateToProps, { login, clearErrors })(Login)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport {\r\n    deleteUser,\r\n    loadFollowingList,\r\n    unfollow,\r\n} from \"../../redux/auth/authActions\"\r\nimport \"../../styles/settings.css\"\r\n\r\nclass Settings extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            deleteWarning: false,\r\n            showFollowing: false,\r\n        }\r\n        this.deleteWarning = this.deleteWarning.bind(this)\r\n        this.deleteUser = this.deleteUser.bind(this)\r\n        this.openFollowing = this.openFollowing.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadFollowingList()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n    }\r\n\r\n    deleteWarning() {\r\n        this.setState({\r\n            deleteWarning: true,\r\n        })\r\n    }\r\n\r\n    deleteUser() {\r\n        this.props.deleteUser()\r\n    }\r\n\r\n    openFollowing() {\r\n        this.setState(prevState => ({\r\n            showFollowing: !prevState.showFollowing,\r\n        }))\r\n    }\r\n\r\n    unfollow(target) {\r\n        this.props.unfollow(target)\r\n    }\r\n\r\n    render() {\r\n        const followingBtnStyling = this.state.showFollowing\r\n            ? \" btn-secondary\"\r\n            : \" btn-info\"\r\n        return (\r\n            <div>\r\n                <h1>Settings</h1>\r\n                <br />\r\n\r\n                <div className=\"row following-header\">\r\n                    <h3 className=\"col\">Following</h3>\r\n                    <button\r\n                        className={\r\n                            \"col following-btn btn btn-sm btn-block btn-\" +\r\n                            followingBtnStyling\r\n                        }\r\n                        onClick={this.openFollowing}\r\n                    >\r\n                        <span className=\"text-light\">\r\n                            {this.state.showFollowing ? \"Hide\" : \"Show\"}\r\n                        </span>\r\n                    </button>\r\n                </div>\r\n\r\n                {this.state.showFollowing ? (\r\n                    <ul className=\"list-group\">\r\n                        {this.props.followingList.length > 0 ? (\r\n                            this.props.followingList\r\n                                .slice()\r\n                                .reverse()\r\n                                .map(username => (\r\n                                    <li\r\n                                        className=\"list-group-item\"\r\n                                        key={username}\r\n                                    >\r\n                                        <button className=\"remove-following-btn\">\r\n                                            <svg\r\n                                                width=\"1.3em\"\r\n                                                height=\"1.3em\"\r\n                                                viewBox=\"0 0 16 16\"\r\n                                                className=\"bi bi-x-circle-fill text-danger\"\r\n                                                fill=\"currentColor\"\r\n                                                xmlns=\"http://www.w3.org/2000/svg\"\r\n                                                onClick={() =>\r\n                                                    this.unfollow(username)\r\n                                                }\r\n                                            >\r\n                                                <path\r\n                                                    fillRule=\"evenodd\"\r\n                                                    d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.146-3.146a.5.5 0 0 0-.708-.708L8 7.293 4.854 4.146a.5.5 0 1 0-.708.708L7.293 8l-3.147 3.146a.5.5 0 0 0 .708.708L8 8.707l3.146 3.147a.5.5 0 0 0 .708-.708L8.707 8l3.147-3.146z\"\r\n                                                />\r\n                                            </svg>\r\n                                        </button>\r\n                                        <Link\r\n                                            to={\"/user/\" + username}\r\n                                            className=\"following-username text-dark\"\r\n                                        >\r\n                                            {username}\r\n                                        </Link>\r\n                                    </li>\r\n                                ))\r\n                        ) : (\r\n                            <li className=\"list-group-item\">\r\n                                You are not following any users\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                ) : (\r\n                    <ul className=\"list-group\">\r\n                        <li className=\"list-group-item\">. . .</li>\r\n                    </ul>\r\n                )}\r\n\r\n                <br />\r\n\r\n                <h3>Delete Account</h3>\r\n                {!this.state.deleteWarning ? (\r\n                    <button\r\n                        className=\"delete-acc-btn btn btn-danger btn-block\"\r\n                        onClick={this.deleteWarning}\r\n                    >\r\n                        Delete\r\n                    </button>\r\n                ) : (\r\n                    <div>\r\n                        <p>\r\n                            Are you sure? Your account will be deleted\r\n                            permanently.\r\n                        </p>\r\n                        <button\r\n                            className=\"delete-acc-btn btn btn-danger btn-block\"\r\n                            onClick={this.deleteUser}\r\n                        >\r\n                            Yes, I'm sure\r\n                        </button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    followingList: state.auth.followingList,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    deleteUser,\r\n    loadFollowingList,\r\n    unfollow,\r\n})(Settings)\r\n","import axios from \"axios\"\r\n\r\nimport {\r\n    GET_POST,\r\n    GET_POST_ERROR,\r\n    POST_LOADING,\r\n    DELETE_POST,\r\n    AUTH_ERROR,\r\n    NO_POST_ID,\r\n} from \"../actionTypes\"\r\nimport { returnErrors } from \"../error/errorActions\"\r\n\r\nexport const getPost = id => dispatch => {\r\n    dispatch({ type: POST_LOADING })\r\n\r\n    axios\r\n        .get(\"/posts/id/\" + id.toString())\r\n        .then(res => {\r\n            dispatch({\r\n                type: GET_POST,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({\r\n                type: GET_POST_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\nexport const deletePost = id => (dispatch, getState) => {\r\n    if (!id) {\r\n        window.location = \"/blap/#/\"\r\n        return\r\n    }\r\n\r\n    axios\r\n        .delete(\"/posts/id/\" + id.toString(), tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: DELETE_POST,\r\n                payload: res.data,\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\nexport const noPostId = () => {\r\n    return {\r\n        type: NO_POST_ID,\r\n    }\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localStorage\r\n    const token = getState().auth.token\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token\r\n    }\r\n\r\n    return config\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function (props) {\r\n    let s = \"\"\r\n    switch (props.type) {\r\n        case \"paragraph\":\r\n            s = \"<p>\" + props.data.text + \"</p>\"\r\n            return createElement(s)\r\n\r\n        case \"header\":\r\n            s = \"<h\" + props.data.level + \">\"\r\n            s += props.data.text\r\n            s += \"</h\" + props.data.level + \">\"\r\n            return createElement(s)\r\n\r\n        case \"simpleImage\":\r\n            let classModifications = \"\"\r\n            let styleModifications = {}\r\n            if (props.data.withBorder) {\r\n                classModifications += \"border \"\r\n            }\r\n            if (props.data.stretched) {\r\n                classModifications += \"w-100 \"\r\n            } else {\r\n                styleModifications = {\r\n                    maxWidth: \"100%\",\r\n                    margin: \"auto\",\r\n                    display: \"block\",\r\n                }\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <img\r\n                        src={props.data.url}\r\n                        className={classModifications}\r\n                        style={styleModifications}\r\n                        alt={props.data.caption}\r\n                    />\r\n                    <p className=\"text-center text-muted\">\r\n                        {props.data.caption}\r\n                    </p>\r\n                </div>\r\n            )\r\n\r\n        case \"delimiter\":\r\n            return <h3 className=\"text-center\">* * *</h3>\r\n\r\n        case \"list\":\r\n            if (props.data.style === \"ordered\") {\r\n                return (\r\n                    <ol>\r\n                        {props.data.items.map((text, idx) => (\r\n                            <li key={idx}>\r\n                                <p>{text}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ol>\r\n                )\r\n            } else {\r\n                return (\r\n                    <ul>\r\n                        {props.data.items.map((text, idx) => (\r\n                            <li key={idx}>\r\n                                <p>{text}</p>\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                )\r\n            }\r\n\r\n        default:\r\n            return <div />\r\n    }\r\n}\r\n\r\nconst createElement = element => (\r\n    <div dangerouslySetInnerHTML={{ __html: element }} />\r\n)\r\n","import React from \"react\"\r\nimport PostComponent from \"./PostComponent\"\r\n\r\nexport default function (props) {\r\n    return (\r\n        <div className=\"text-dark\">\r\n            {props.blocks.map((block, idx) => {\r\n                return (\r\n                    <PostComponent\r\n                        key={idx}\r\n                        type={block.type}\r\n                        data={block.data}\r\n                    />\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport qs from \"qs\"\r\n\r\nimport \"../../styles/post.css\"\r\nimport { getPost, deletePost, noPostId } from \"../../redux/post/postActions\"\r\nimport PostRender from \"./PostRender\"\r\n\r\nclass Post extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.deletePost = this.deletePost.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.id = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        }).id\r\n\r\n        if (this.id) {\r\n            this.props.getPost(this.id)\r\n        } else {\r\n            this.props.noPostId()\r\n        }\r\n    }\r\n\r\n    deletePost() {\r\n        this.props.deletePost(this.id)\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.deletedPost) {\r\n            return (\r\n                <div className=\"blog-post\">\r\n                    <p className=\"text-center\">Post deleted</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.foundPost) {\r\n            return (\r\n                <div className=\"blog-post\">\r\n                    <div className=\"text-secondary\">\r\n                        <Link\r\n                            to={\"/user/\" + this.props.author}\r\n                            className=\"blog-post-meta author text-secondary\"\r\n                        >\r\n                            {this.props.author}\r\n                        </Link>{\" \"}\r\n                        <p style={{ display: \"inline\" }} className=\"small\">\r\n                            {this.props.createdAt.substring(0, 10)}\r\n                        </p>\r\n                    </div>\r\n\r\n                    {/* {JSON.stringify(this.props.content.blocks)} */}\r\n                    <PostRender blocks={this.props.content.blocks} />\r\n\r\n                    <br />\r\n                    {this.props.user &&\r\n                    this.props.user.username === this.props.author ? (\r\n                        <div className=\"row post-btns\">\r\n                            <Link\r\n                                to={\"/edit?id=\" + this.id}\r\n                                className=\"edit-btn btn btn-sm btn-secondary btn-block\"\r\n                            >\r\n                                Edit\r\n                            </Link>\r\n                            <button\r\n                                onClick={this.deletePost}\r\n                                className=\"delete-btn btn btn-sm btn-danger btn-block\"\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    ) : null}\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"blog-post\">\r\n                <p className=\"text-center\">Couldn't find post</p>\r\n                <button\r\n                    className=\"retry-btn btn btn-sm btn-secondary btn-block\"\r\n                    onClick={() => window.location.reload(true)}\r\n                >\r\n                    Retry\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    title: state.post.title,\r\n    content: state.post.content,\r\n    author: state.post.username,\r\n    createdAt: state.post.createdAt,\r\n\r\n    isLoading: state.post.isLoading,\r\n    deletedPost: state.post.deletedPost,\r\n    foundPost: state.post.foundPost,\r\n\r\n    user: state.auth.user,\r\n})\r\n\r\nexport default connect(mapStateToProps, { getPost, deletePost, noPostId })(Post)\r\n","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport \"../styles/postPreview.css\"\r\n\r\nexport default function PostPreview(props) {\r\n    return (\r\n        <div>\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <h2 className=\"card-title\">\r\n                        <Link\r\n                            to={props.data.postDestination}\r\n                            className=\"text-dark stretched-link\"\r\n                        >\r\n                            {props.data.title}\r\n                        </Link>\r\n                    </h2>\r\n                    <div className=\"card-subtitle\">\r\n                        <Link\r\n                            to={props.data.userDestination}\r\n                            className=\"author text-secondary\"\r\n                        >\r\n                            {props.data.author}\r\n                        </Link>{\" \"}\r\n                        <p\r\n                            style={{ display: \"inline\" }}\r\n                            className=\"small date text-secondary\"\r\n                        >\r\n                            {props.data.date}\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br />\r\n        </div>\r\n    )\r\n}\r\n","import axios from \"axios\"\r\n\r\nimport {\r\n    ALL_POSTS,\r\n    FOLLOWING_POSTS,\r\n    LOADING_POSTS,\r\n    AUTH_ERROR,\r\n    USER_POSTS,\r\n    USER_NOT_FOUND,\r\n    SEARCH_POSTS,\r\n} from \"../actionTypes\"\r\nimport { returnErrors } from \"../error/errorActions\"\r\n\r\n// Get all posts\r\nexport const allPosts = (before, after) => dispatch => {\r\n    dispatch({ type: LOADING_POSTS })\r\n\r\n    // Body\r\n    const body = JSON.stringify({\r\n        before,\r\n        after,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    axios\r\n        .post(\"/posts/all\", body, config)\r\n        .then(res => {\r\n            const list = [...res.data.posts]\r\n            dispatch({\r\n                type: ALL_POSTS,\r\n                payload: {\r\n                    list,\r\n                    last: res.data.last,\r\n                },\r\n            })\r\n        })\r\n        .catch()\r\n}\r\n\r\n// Get posts from followed users\r\nexport const followingPosts = (before, after) => (dispatch, getState) => {\r\n    dispatch({ type: LOADING_POSTS })\r\n\r\n    // Body\r\n    const body = JSON.stringify({\r\n        before,\r\n        after,\r\n    })\r\n\r\n    axios\r\n        .post(\"/posts/following\", body, tokenConfig(getState))\r\n        .then(res => {\r\n            const list = [...res.data.posts]\r\n            dispatch({\r\n                type: FOLLOWING_POSTS,\r\n                payload: {\r\n                    list,\r\n                    noFollowing: res.data.noFollowing,\r\n                    last: res.data.last,\r\n                },\r\n            })\r\n        })\r\n        .catch(err => {\r\n            dispatch(returnErrors(err.response.data, err.response.status))\r\n            dispatch({\r\n                type: AUTH_ERROR,\r\n            })\r\n        })\r\n}\r\n\r\n// Get all of a user's posts\r\nexport const userPosts = (username, before, after) => dispatch => {\r\n    dispatch({ type: LOADING_POSTS })\r\n\r\n    // Body\r\n    const body = JSON.stringify({\r\n        before,\r\n        after,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    axios\r\n        .post(\"/users/\" + username + \"/posts\", body, config)\r\n        .then(res => {\r\n            const list = [...res.data.posts]\r\n            dispatch({\r\n                type: USER_POSTS,\r\n                payload: {\r\n                    list,\r\n                    last: res.data.last,\r\n                },\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({ type: USER_NOT_FOUND })\r\n        })\r\n}\r\n\r\n// Get a list of posts based on a search\r\nexport const searchPosts = (target, before, after) => dispatch => {\r\n    dispatch({ type: LOADING_POSTS })\r\n\r\n    // Body\r\n    const body = JSON.stringify({\r\n        target,\r\n        before,\r\n        after,\r\n    })\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    axios\r\n        .post(\"/posts/search\", body, config)\r\n        .then(res => {\r\n            const list = [...res.data.posts]\r\n            dispatch({\r\n                type: SEARCH_POSTS,\r\n                payload: {\r\n                    list,\r\n                    last: res.data.last,\r\n                },\r\n            })\r\n        })\r\n        .catch()\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localStorage\r\n    const token = getState().auth.token\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token\r\n    }\r\n\r\n    return config\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport qs from \"qs\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport PostPreview from \"./PostPreview\"\r\nimport {\r\n    allPosts,\r\n    followingPosts,\r\n    userPosts,\r\n    searchPosts,\r\n} from \"../redux/postList/postListActions\"\r\nimport \"../styles/postlist.css\"\r\n\r\nclass PostList extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            page: null,\r\n            before: null,\r\n            after: null,\r\n        }\r\n        this.updateList = this.updateList.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        const query = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        })\r\n        this.updateList(query)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        const query = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        })\r\n        if (\r\n            query.page !== this.state.page ||\r\n            query.before !== this.state.before ||\r\n            query.after !== this.state.after\r\n        ) {\r\n            this.updateList(query)\r\n        }\r\n    }\r\n\r\n    updateList(query) {\r\n        this.setState(\r\n            {\r\n                page: query.page,\r\n                before: query.before,\r\n                after: query.after,\r\n            },\r\n            () => {\r\n                switch (this.props.listType) {\r\n                    case \"all\":\r\n                        this.props.allPosts(this.state.before, this.state.after)\r\n                        break\r\n                    case \"following\":\r\n                        this.props.followingPosts(\r\n                            this.state.before,\r\n                            this.state.after\r\n                        )\r\n                        break\r\n                    case \"user\":\r\n                        this.props.userPosts(\r\n                            this.props.username,\r\n                            this.state.before,\r\n                            this.state.after\r\n                        )\r\n                        break\r\n                    case \"search\":\r\n                        this.props.searchPosts(\r\n                            this.props.target,\r\n                            this.state.before,\r\n                            this.state.after\r\n                        )\r\n                        break\r\n                    default:\r\n                        this.props.allPosts(this.before, this.after)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isLoading) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.list.length === 0) {\r\n            return <h3 className=\"text-center\">There's nothing here!</h3>\r\n        }\r\n\r\n        const previousModifier = this.props.last ? \"\" : \" previous\"\r\n        const nextModifier = this.state.page > \"1\" ? \" next\" : \"\"\r\n        return (\r\n            <div>\r\n                {this.props.list.map(post => (\r\n                    <PostPreview\r\n                        key={post._id}\r\n                        data={{\r\n                            title: post.title,\r\n                            author: post.username,\r\n                            date: post.createdAt.substring(0, 10),\r\n                            postDestination: \"/post?id=\" + post._id,\r\n                            userDestination: \"/user/\" + post.username,\r\n                        }}\r\n                    />\r\n                ))}\r\n\r\n                <nav>\r\n                    <ul className=\"pagination\">\r\n                        {this.state.page > \"1\" && (\r\n                            <li className=\"page-item\">\r\n                                <Link\r\n                                    className=\"\"\r\n                                    to={\r\n                                        \"/\" +\r\n                                        this.props.listType +\r\n                                        (this.props.listType === \"user\"\r\n                                            ? \"/\" + this.props.username\r\n                                            : \"\") +\r\n                                        \"?page=\" +\r\n                                        (parseInt(\r\n                                            this.state.page\r\n                                                ? this.state.page\r\n                                                : \"1\"\r\n                                        ) -\r\n                                            1) +\r\n                                        \"&after=\" +\r\n                                        (this.props.list.length > 0\r\n                                            ? this.props.list[0].createdAt\r\n                                            : \"\")\r\n                                    }\r\n                                >\r\n                                    <button\r\n                                        className={\r\n                                            \"btn btn-outline-dark\" +\r\n                                            previousModifier\r\n                                        }\r\n                                    >\r\n                                        Previous\r\n                                    </button>\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                        {!this.props.last && (\r\n                            <li className=\"page-item\">\r\n                                <Link\r\n                                    className=\"\"\r\n                                    to={\r\n                                        \"/\" +\r\n                                        this.props.listType +\r\n                                        (this.props.listType === \"user\"\r\n                                            ? \"/\" + this.props.username\r\n                                            : \"\") +\r\n                                        \"?page=\" +\r\n                                        (parseInt(\r\n                                            this.state.page\r\n                                                ? this.state.page\r\n                                                : \"1\"\r\n                                        ) +\r\n                                            1) +\r\n                                        \"&before=\" +\r\n                                        this.props.list[\r\n                                            this.props.list.length - 1\r\n                                        ].createdAt\r\n                                    }\r\n                                >\r\n                                    <button\r\n                                        className={\r\n                                            \"btn btn-outline-dark\" +\r\n                                            nextModifier\r\n                                        }\r\n                                    >\r\n                                        Next\r\n                                    </button>\r\n                                </Link>\r\n                            </li>\r\n                        )}\r\n                    </ul>\r\n                </nav>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isLoading: state.postList.isLoading,\r\n    list: state.postList.list,\r\n    last: state.postList.last,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    allPosts,\r\n    followingPosts,\r\n    userPosts,\r\n    searchPosts,\r\n})(PostList)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport PostList from \"../PostList\"\r\n\r\nclass Home extends React.Component {\r\n    render() {\r\n        if (this.props.isAuthenticated === null) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-dark\">\r\n                    {this.props.isAuthenticated\r\n                        ? this.props.noFollowing && !this.props.isLoading\r\n                            ? \"Discover\"\r\n                            : \"Following\"\r\n                        : \"All Posts\"}\r\n                </h1>\r\n                <br />\r\n                <PostList\r\n                    listType={\r\n                        this.props.isAuthenticated && !this.props.noFollowing\r\n                            ? \"following\"\r\n                            : \"all\"\r\n                    }\r\n                    location={this.props.location}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    noFollowing: state.postList.noFollowing,\r\n    isLoading: state.postList.isLoading,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Home)\r\n","import axios from \"axios\"\r\n\r\nimport {\r\n    POST_SUCCESS,\r\n    POST_TOO_SHORT,\r\n    POST_NO_TITLE,\r\n    CREATING_POST,\r\n    CREATE_POST_ERROR,\r\n    EDIT_POST,\r\n    DIFF_TITLE,\r\n} from \"../actionTypes\"\r\n\r\nexport const postSuccess = output => (dispatch, getState) => {\r\n    dispatch({ type: CREATING_POST })\r\n\r\n    const newPost = {\r\n        title: output.blocks[0].data.text,\r\n        content: output,\r\n    }\r\n    const body = JSON.stringify(newPost)\r\n\r\n    axios\r\n        .post(\"/posts/create\", body, tokenConfig(getState))\r\n        .then(res => {\r\n            dispatch({\r\n                type: POST_SUCCESS,\r\n                payload: {\r\n                    newPostId: res.data.post._id,\r\n                },\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({ type: CREATE_POST_ERROR })\r\n        })\r\n}\r\n\r\nexport const editPost = (id, output) => (dispatch, getState) => {\r\n    dispatch({ type: CREATING_POST })\r\n\r\n    const newContent = { content: output }\r\n    const body = JSON.stringify(newContent)\r\n\r\n    axios\r\n        .patch(\"/posts/id/\" + id, body, tokenConfig(getState))\r\n        .then(() => {\r\n            dispatch({\r\n                type: EDIT_POST,\r\n                payload: {\r\n                    newPostId: id,\r\n                },\r\n            })\r\n        })\r\n        .catch(() => {\r\n            dispatch({ type: CREATE_POST_ERROR })\r\n        })\r\n}\r\n\r\nexport const postTooShort = () => {\r\n    return { type: POST_TOO_SHORT }\r\n}\r\n\r\nexport const postNoTitle = () => {\r\n    return { type: POST_NO_TITLE }\r\n}\r\n\r\nexport const diffTitle = oldTitle => {\r\n    return {\r\n        type: DIFF_TITLE,\r\n        payload: {\r\n            oldTitle,\r\n        },\r\n    }\r\n}\r\n\r\n// Setup config/headers and token\r\nexport const tokenConfig = getState => {\r\n    // Get token from localStorage\r\n    const token = getState().auth.token\r\n\r\n    // Headers\r\n    const config = {\r\n        headers: {\r\n            \"Content-type\": \"application/json\",\r\n        },\r\n    }\r\n\r\n    // If token, add to headers\r\n    if (token) {\r\n        config.headers[\"x-auth-token\"] = token\r\n    }\r\n\r\n    return config\r\n}\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport EditorJS from \"@editorjs/editorjs\"\r\n\r\nimport Header from \"@editorjs/header\"\r\nimport SimpleImage from \"@editorjs/simple-image\"\r\nimport Delimiter from \"@editorjs/delimiter\"\r\nimport List from \"@editorjs/list\"\r\nimport Underline from \"@editorjs/underline\"\r\nimport InlineCode from \"@editorjs/inline-code\"\r\n\r\nimport \"../styles/createPost.css\"\r\nimport {\r\n    postSuccess,\r\n    postTooShort,\r\n    postNoTitle,\r\n} from \"../redux/createPost/createPostActions\"\r\n\r\nclass CreatePost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editorIsReady: false,\r\n        }\r\n        this.handlePost = this.handlePost.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.editor = new EditorJS({\r\n            holder: \"editorjs\",\r\n            placeholder: \"New Post\",\r\n            autofocus: true,\r\n\r\n            tools: {\r\n                header: Header,\r\n                simpleImage: SimpleImage,\r\n                delimiter: Delimiter,\r\n                list: List,\r\n                underline: Underline,\r\n                inlineCode: InlineCode,\r\n            },\r\n\r\n            onReady: () => {\r\n                this.setState({\r\n                    editorIsReady: true,\r\n                })\r\n            },\r\n\r\n            data: {\r\n                time: 0,\r\n                blocks: [\r\n                    {\r\n                        type: \"header\",\r\n                        data: {\r\n                            text: \"New Post\",\r\n                            level: 1,\r\n                        },\r\n                    },\r\n                ],\r\n                version: \"2.18.0\",\r\n            },\r\n        })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/login\"\r\n        }\r\n    }\r\n\r\n    handlePost() {\r\n        this.editor\r\n            .save()\r\n            .then(output => {\r\n                const { blocks } = output\r\n\r\n                // There must be at least 2 blocks, and the first must be an h1\r\n                if (blocks.length < 2) {\r\n                    this.props.postTooShort()\r\n                } else if (\r\n                    blocks[0].type !== \"header\" ||\r\n                    blocks[0].data.level !== 1\r\n                ) {\r\n                    this.props.postNoTitle()\r\n                } else {\r\n                    this.props.postSuccess(output)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Saving failed: \" + err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"editorjs\" />\r\n                {this.state.editorIsReady ? (\r\n                    <div>\r\n                        {this.props.error ? (\r\n                            <div className=\"alert alert-danger text-center\">\r\n                                {this.props.error.msg}\r\n                            </div>\r\n                        ) : null}\r\n\r\n                        <button\r\n                            className=\"post-button btn btn-lg btn-success btn-block\"\r\n                            onClick={this.handlePost}\r\n                        >\r\n                            {this.props.creatingPost ? (\r\n                                <span className=\"spinner-border spinner-border-sm\" />\r\n                            ) : (\r\n                                \"Post\"\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    error: state.createPost.error,\r\n    creatingPost: state.createPost.creatingPost,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    postSuccess,\r\n    postTooShort,\r\n    postNoTitle,\r\n})(CreatePost)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport EditorJS from \"@editorjs/editorjs\"\r\nimport qs from \"qs\"\r\n\r\nimport Header from \"@editorjs/header\"\r\nimport SimpleImage from \"@editorjs/simple-image\"\r\nimport Delimiter from \"@editorjs/delimiter\"\r\nimport List from \"@editorjs/list\"\r\nimport Underline from \"@editorjs/underline\"\r\nimport InlineCode from \"@editorjs/inline-code\"\r\n\r\nimport \"../styles/createPost.css\"\r\nimport {\r\n    editPost,\r\n    postTooShort,\r\n    postNoTitle,\r\n    diffTitle,\r\n} from \"../redux/createPost/createPostActions\"\r\nimport { getPost, noPostId } from \"../redux/post/postActions\"\r\n\r\nclass EditPost extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            editorIsReady: false,\r\n        }\r\n        this.handlePost = this.handlePost.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        // Load old post\r\n        this.id = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        }).id\r\n\r\n        if (this.id) {\r\n            this.props.getPost(this.id)\r\n        } else {\r\n            this.props.noPostId()\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/login\"\r\n        }\r\n\r\n        if (!this.editor && this.props.foundPost) {\r\n            this.editor = new EditorJS({\r\n                holder: \"editorjs\",\r\n                placeholder: \"Click here to start writing!\",\r\n\r\n                tools: {\r\n                    header: Header,\r\n                    simpleImage: SimpleImage,\r\n                    delimiter: Delimiter,\r\n                    list: List,\r\n                    underline: Underline,\r\n                    inlineCode: InlineCode,\r\n                },\r\n\r\n                onReady: () => {\r\n                    this.setState({\r\n                        editorIsReady: true,\r\n                    })\r\n                },\r\n\r\n                data: this.props.content,\r\n            })\r\n        }\r\n    }\r\n\r\n    handlePost() {\r\n        this.editor\r\n            .save()\r\n            .then(output => {\r\n                const { blocks } = output\r\n\r\n                // There must be at least 2 blocks, and the first must be an h1\r\n                if (blocks.length < 2) {\r\n                    this.props.postTooShort()\r\n                } else if (\r\n                    blocks[0].type !== \"header\" ||\r\n                    blocks[0].data.level !== 1\r\n                ) {\r\n                    this.props.postNoTitle()\r\n                } else if (this.props.title !== blocks[0].data.text) {\r\n                    this.props.diffTitle(this.props.title)\r\n                } else {\r\n                    this.props.editPost(this.id, output)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(\"Saving failed: \" + err)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.props.foundPost === false) {\r\n            return (\r\n                <div>\r\n                    <p className=\"text-center\">Couldn't find post</p>\r\n                    <button\r\n                        className=\"retry-btn btn btn-sm btn-secondary btn-block\"\r\n                        onClick={() => window.location.reload(true)}\r\n                    >\r\n                        Retry\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (\r\n            this.props.isAuthenticated &&\r\n            this.props.author !== this.props.user.username\r\n        ) {\r\n            return (\r\n                <div className=\"alert alert-danger text-center\">\r\n                    You are not authorized to edit this post.\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"editorjs\" />\r\n                {this.state.editorIsReady ? (\r\n                    <div>\r\n                        {this.props.error ? (\r\n                            <div className=\"alert alert-danger text-center\">\r\n                                {this.props.error.msg}\r\n                            </div>\r\n                        ) : null}\r\n\r\n                        <button\r\n                            className=\"post-button btn btn-lg btn-success btn-block\"\r\n                            onClick={this.handlePost}\r\n                        >\r\n                            {this.props.creatingPost ? (\r\n                                <span className=\"spinner-border spinner-border-sm\" />\r\n                            ) : (\r\n                                \"Save\"\r\n                            )}\r\n                        </button>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    error: state.createPost.error,\r\n    creatingPost: state.createPost.creatingPost,\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    user: state.auth.user,\r\n\r\n    title: state.post.title,\r\n    content: state.post.content,\r\n    author: state.post.username,\r\n\r\n    foundPost: state.post.foundPost,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    editPost,\r\n    postTooShort,\r\n    postNoTitle,\r\n    diffTitle,\r\n    getPost,\r\n    noPostId,\r\n})(EditPost)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nimport PostList from \"../PostList\"\r\nimport {\r\n    loadFollowingList,\r\n    follow,\r\n    unfollow,\r\n} from \"../../redux/auth/authActions\"\r\nimport { userPosts } from \"../../redux/postList/postListActions\"\r\nimport \"../../styles/userPage.css\"\r\n\r\nclass UserPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isFollowing: null,\r\n        }\r\n        this.toggleFollow = this.toggleFollow.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadFollowingList()\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        // Check if the user is on the following list\r\n        if (this.props.followingList && this.state.isFollowing === null) {\r\n            let f = null\r\n            this.props.followingList.forEach((followingItem, idx) => {\r\n                if (followingItem === this.props.match.params.username) {\r\n                    f = true\r\n                    this.setState({ isFollowing: true })\r\n                }\r\n            })\r\n            if (f === null) {\r\n                this.setState({ isFollowing: false })\r\n            }\r\n        }\r\n    }\r\n\r\n    toggleFollow() {\r\n        if (this.state.isFollowing) {\r\n            this.props.unfollow(this.props.match.params.username)\r\n        } else {\r\n            this.props.follow(this.props.match.params.username)\r\n        }\r\n        this.setState(prevState => ({\r\n            isFollowing: !prevState.isFollowing,\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        if (this.props.userNotFound === null) {\r\n            this.props.userPosts(this.props.match.params.username)\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.userNotFound) {\r\n            return (\r\n                <div>\r\n                    <p className=\"text-center\">Couldn't find user</p>\r\n                    <button\r\n                        className=\"retry-btn btn btn-sm btn-secondary btn-block\"\r\n                        onClick={() => window.location.reload(true)}\r\n                    >\r\n                        Retry\r\n                    </button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <h1 className=\"d-inline text-dark\">\r\n                        {this.props.match.params.username}\r\n                    </h1>\r\n                    {this.state.isFollowing !== null &&\r\n                    this.props.self &&\r\n                    this.props.self.username !==\r\n                        this.props.match.params.username ? (\r\n                        this.state.isFollowing ? (\r\n                            <button\r\n                                className=\"follow-btn d-inline mb-3 ml-3 btn btn-sm btn-secondary btn-block\"\r\n                                onClick={this.toggleFollow}\r\n                            >\r\n                                Unfollow\r\n                            </button>\r\n                        ) : (\r\n                            <button\r\n                                className=\"follow-btn d-inline mb-3 ml-3 btn btn-sm btn-info btn-block text-light\"\r\n                                onClick={this.toggleFollow}\r\n                            >\r\n                                Follow\r\n                            </button>\r\n                        )\r\n                    ) : (\r\n                        this.props.self &&\r\n                        this.state.isFollowing !== null && (\r\n                            <Link to=\"/settings\" className=\"\">\r\n                                <svg\r\n                                    width=\"1.5em\"\r\n                                    height=\"1.5em\"\r\n                                    viewBox=\"0 0 16 16\"\r\n                                    className=\"bi bi-gear-fill text-secondary mb-3 ml-2\"\r\n                                    fill=\"currentColor\"\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                >\r\n                                    <path\r\n                                        fillRule=\"evenodd\"\r\n                                        d=\"M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 0 0-5.86 2.929 2.929 0 0 0 0 5.858z\"\r\n                                    />\r\n                                </svg>\r\n                            </Link>\r\n                        )\r\n                    )}\r\n                </div>\r\n                <br />\r\n                <PostList\r\n                    listType=\"user\"\r\n                    username={this.props.match.params.username}\r\n                    location={this.props.location}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    userNotFound: state.postList.userNotFound,\r\n    followingList: state.auth.followingList,\r\n    self: state.auth.user,\r\n})\r\n\r\nexport default connect(mapStateToProps, {\r\n    loadFollowingList,\r\n    userPosts,\r\n    follow,\r\n    unfollow,\r\n})(UserPage)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport qs from \"qs\"\r\n\r\nimport PostList from \"../PostList\"\r\n\r\nclass AllPosts extends React.Component {\r\n    componentDidMount() {\r\n        const query = qs.parse(this.props.location, {\r\n            ignoreQueryPrefix: true,\r\n        })\r\n        this.page = query.page ? query.page : \"null\"\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false && this.page === \"none\") {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated === null) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-dark\">All Posts</h1>\r\n                <br />\r\n                <PostList listType=\"all\" location={this.props.location} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n})\r\n\r\nexport default connect(mapStateToProps)(AllPosts)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport PostList from \"../PostList\"\r\n\r\nclass FollowingPosts extends React.Component {\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/login\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.props.isAuthenticated === null) {\r\n            return (\r\n                <div className=\"text-center\">\r\n                    <div className=\"spinner-border\" />\r\n                </div>\r\n            )\r\n        }\r\n\r\n        if (this.props.noFollowing) {\r\n            return (\r\n                <div>\r\n                    <h1>Following</h1>\r\n                    <h3 className=\"text-center\">There's nothing here!</h3>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"text-dark\">Following</h1>\r\n                <br />\r\n                <PostList listType=\"following\" location={this.props.location} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated,\r\n    noFollowing: state.postList.noFollowing,\r\n})\r\n\r\nexport default connect(mapStateToProps)(FollowingPosts)\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport qs from \"qs\"\r\n\r\nimport PostList from \"../PostList\"\r\n\r\nclass SearchPosts extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            target: null,\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const target = qs.parse(this.props.location.search, {\r\n            ignoreQueryPrefix: true,\r\n        }).target\r\n        if (target === \"\") {\r\n            window.location = \"/blap/#/\"\r\n        }\r\n        this.setState({ target })\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.props.isAuthenticated === false) {\r\n            window.location = \"/blap/#/login\"\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.target !== \"\") {\r\n            return (\r\n                <div>\r\n                    <h1 className=\"text-dark\">\r\n                        {'Search - \"' + this.state.target + '\"'}\r\n                    </h1>\r\n                    <br />\r\n                    <PostList\r\n                        listType=\"search\"\r\n                        location={this.props.location}\r\n                        target={this.state.target}\r\n                    />\r\n                </div>\r\n            )\r\n        } else {\r\n            return <div />\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect()(SearchPosts)\r\n","import React from \"react\"\r\nimport { Provider } from \"react-redux\"\r\nimport store from \"./redux/store\"\r\nimport { HashRouter as Router, Route } from \"react-router-dom\"\r\n// import \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport \"./scss/custom.scss\"\r\n\r\nimport \"./styles/app.css\"\r\nimport { loadUser } from \"./redux/auth/authActions\"\r\nimport {\r\n    Navbar,\r\n    Signup,\r\n    Login,\r\n    Settings,\r\n    Post,\r\n    Home,\r\n    CreatePost,\r\n    UserPage,\r\n    AllPosts,\r\n    FollowingPosts,\r\n    EditPost,\r\n    SearchPosts,\r\n} from \"./components\"\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        store.dispatch(loadUser())\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Provider store={store}>\r\n                <Router>\r\n                    <div className=\"text-dark\">\r\n                        <Navbar />\r\n                        <br />\r\n                        <div className=\"container-fluid main\">\r\n                            <Route path=\"/\" component={Home} exact />\r\n                            <Route path=\"/all\" component={AllPosts} />\r\n                            <Route\r\n                                path=\"/following\"\r\n                                component={FollowingPosts}\r\n                            />\r\n                            <Route path=\"/signup\" component={Signup} />\r\n                            <Route path=\"/login\" component={Login} />\r\n                            <Route path=\"/settings\" component={Settings} />\r\n                            <Route path=\"/post\" component={Post} />\r\n                            <Route path=\"/create\" component={CreatePost} />\r\n                            <Route path=\"/edit\" component={EditPost} />\r\n                            <Route\r\n                                path=\"/user/:username\"\r\n                                component={UserPage}\r\n                            />\r\n                            <Route path=\"/search\" component={SearchPosts} />\r\n                        </div>\r\n                    </div>\r\n                </Router>\r\n            </Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nimport axios from \"axios\"\r\naxios.defaults.baseURL = \"https://blap-api.herokuapp.com/api\"\r\n// axios.defaults.baseURL = \"http://localhost:5000/api\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}